{
    "torch.nn.functional.conv1d": {
        "Parameter type": {
            "input": "Tensor (shape: (minibatch, in_channels, iW))",
            "weight": "Tensor (shape: (out_channels, in_channels // groups, kW))",
            "bias": "Optional[Tensor] (shape: (out_channels))",
            "stride": "Union[int, Tuple[int]] (default: 1)",
            "padding": "Union[int, Tuple[int], str] (default: 0; options: 'valid', 'same')",
            "dilation": "Union[int, Tuple[int]] (default: 1)",
            "groups": "int (default: 1)"
        },
        "Mandatory Parameters": [
            "input",
            "weight"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": [
            [
                "padding",
                "stride",
                "(padding == 'same') & (stride != 1)"
            ]
        ]
    },
    "torch.nn.functional.conv2d": {
        "Parameter type": {
            "input": "Tensor (shape: (minibatch, in_channels, iH, iW))",
            "weight": "Tensor (shape: (out_channels, in_channels // groups, kH, kW))",
            "bias": "Optional[Tensor] (shape: (out_channels))",
            "stride": "Union[int, Tuple[int, int]] (default: 1)",
            "padding": "Union[int, Tuple[int, int], str] (default: 0; options: 'valid', 'same')",
            "dilation": "Union[int, Tuple[int, int]] (default: 1)",
            "groups": "int (default: 1)"
        },
        "Mandatory Parameters": [
            "input",
            "weight"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": [
            [
                "padding",
                "stride",
                "(padding == 'same') & (stride != 1)"
            ]
        ]
    },
    "torch.nn.functional.conv3d": {
        "Parameter type": {
            "input": "Tensor (shape: (minibatch, in_channels, iT, iH, iW))",
            "weight": "Tensor (shape: (out_channels, in_channels // groups, kT, kH, kW))",
            "bias": "Optional[Tensor] (shape: (out_channels))",
            "stride": "Union[int, Tuple[int, int, int]] (default: 1)",
            "padding": "Union[int, Tuple[int, int, int], str] (default: 0; options: 'valid', 'same')",
            "dilation": "Union[int, Tuple[int, int, int]] (default: 1)",
            "groups": "int (default: 1)"
        },
        "Mandatory Parameters": [
            "input",
            "weight"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": [
            [
                "padding",
                "stride",
                "(padding == 'same') & (stride != 1)"
            ]
        ]
    },
    "torch.nn.functional.conv_transpose1d": {
        "Parameter type": {
            "input": "Tensor (shape: (minibatch, in_channels, iW))",
            "weight": "Tensor (shape: (in_channels, out_channels // groups, kW))",
            "bias": "Optional[Tensor] (shape: (out_channels))",
            "stride": "Union[int, Tuple[int]] (default: 1)",
            "padding": "Union[int, Tuple[int]] (default: 0)",
            "output_padding": "Union[int, Tuple[int]] (default: 0)",
            "groups": "int (default: 1)",
            "dilation": "Union[int, Tuple[int]] (default: 1)"
        },
        "Mandatory Parameters": [
            "input",
            "weight"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.conv_transpose2d": {
        "Parameter type": {
            "input": "Tensor (shape: (minibatch, in_channels, iH, iW))",
            "weight": "Tensor (shape: (in_channels, out_channels // groups, kH, kW))",
            "bias": "Optional[Tensor] (shape: (out_channels))",
            "stride": "Union[int, Tuple[int, int]] (default: 1)",
            "padding": "Union[int, Tuple[int, int]] (default: 0)",
            "output_padding": "Union[int, Tuple[int, int]] (default: 0)",
            "groups": "int (default: 1)",
            "dilation": "Union[int, Tuple[int, int]] (default: 1)"
        },
        "Mandatory Parameters": [
            "input",
            "weight"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.conv_transpose3d": {
        "Parameter type": {
            "input": "Tensor (shape: (minibatch, in_channels, iT, iH, iW))",
            "weight": "Tensor (shape: (in_channels, out_channels // groups, kT, kH, kW))",
            "bias": "Optional[Tensor] (shape: (out_channels))",
            "stride": "Union[int, Tuple[int, int, int]] (default: 1)",
            "padding": "Union[int, Tuple[int, int, int]] (default: 0)",
            "output_padding": "Union[int, Tuple[int, int, int]] (default: 0)",
            "groups": "int (default: 1)",
            "dilation": "Union[int, Tuple[int, int, int]] (default: 1)"
        },
        "Mandatory Parameters": [
            "input",
            "weight"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.unfold": {
        "Parameter type": {
            "input": "Tensor (shape: (N, C, *))",
            "kernel_size": "Union[int, Tuple[int]]",
            "dilation": "Union[int, Tuple[int]] (default: 1)",
            "padding": "Union[int, Tuple[int]] (default: 0)",
            "stride": "Union[int, Tuple[int]] (default: 1)"
        },
        "Mandatory Parameters": [
            "input",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.fold": {
        "Parameter type": {
            "input": "Tensor",
            "output_size": "Union[int, Tuple[int]]",
            "kernel_size": "Union[int, Tuple[int]]",
            "dilation": "Union[int, Tuple[int]] (default: 1)",
            "padding": "Union[int, Tuple[int]] (default: 0)",
            "stride": "Union[int, Tuple[int]] (default: 1)"
        },
        "Mandatory Parameters": [
            "input",
            "output_size",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.avg_pool1d": {
        "Parameter type": {
            "input": "Tensor (shape: (minibatch, in_channels, iW))",
            "kernel_size": "Union[int, Tuple[int]]",
            "stride": "Union[int, Tuple[int]] (default: kernel_size)",
            "padding": "Union[int, Tuple[int]] (default: 0)",
            "ceil_mode": "bool (default: False)",
            "count_include_pad": "bool (default: True)"
        },
        "Mandatory Parameters": [
            "input",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.avg_pool2d": {
        "Parameter type": {
            "input": "Tensor (shape: (minibatch, in_channels, iH, iW))",
            "kernel_size": "Union[int, Tuple[int, int]]",
            "stride": "Union[int, Tuple[int, int]] (default: kernel_size)",
            "padding": "Union[int, Tuple[int, int]] (default: 0)",
            "ceil_mode": "bool (default: False)",
            "count_include_pad": "bool (default: True)",
            "divisor_override": "Optional[int] (default: None)"
        },
        "Mandatory Parameters": [
            "input",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.avg_pool3d": {
        "Parameter type": {
            "input": "Tensor (shape: (minibatch, in_channels, iT, iH, iW))",
            "kernel_size": "Union[int, Tuple[int, int, int]]",
            "stride": "Union[int, Tuple[int, int, int]] (default: kernel_size)",
            "padding": "Union[int, Tuple[int, int, int]] (default: 0)",
            "ceil_mode": "bool (default: False)",
            "count_include_pad": "bool (default: True)",
            "divisor_override": "Optional[int] (default: None)"
        },
        "Mandatory Parameters": [
            "input",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.max_pool1d": {
        "Parameter type": {
            "input": "Tensor (shape: (minibatch, in_channels, iW))",
            "kernel_size": "Union[int, Tuple[int]]",
            "stride": "Union[int, Tuple[int]] (default: kernel_size)",
            "padding": "int (default: 0)",
            "dilation": "int (default: 1)",
            "ceil_mode": "bool (default: False)",
            "return_indices": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.max_pool2d": {
        "Parameter type": {
            "input": "Tensor (shape: (minibatch, in_channels, iH, iW))",
            "kernel_size": "Union[int, Tuple[int, int]]",
            "stride": "Union[int, Tuple[int, int]] (default: kernel_size)",
            "padding": "Union[int, Tuple[int, int]] (default: 0)",
            "dilation": "Union[int, Tuple[int, int]] (default: 1)",
            "ceil_mode": "bool (default: False)",
            "return_indices": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.max_pool3d": {
        "Parameter type": {
            "input": "Tensor (shape: (minibatch, in_channels, iD, iH, iW))",
            "kernel_size": "Union[int, Tuple[int, int, int]]",
            "stride": "Union[int, Tuple[int, int, int]] (default: kernel_size)",
            "padding": "Union[int, Tuple[int, int, int]] (default: 0)",
            "dilation": "Union[int, Tuple[int, int, int]] (default: 1)",
            "ceil_mode": "bool (default: False)",
            "return_indices": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.max_unpool1d": {
        "Parameter type": {
            "input": "Tensor",
            "indices": "Tensor",
            "kernel_size": "int or tuple",
            "stride": "int or tuple",
            "padding": "int or tuple",
            "output_size": "optional"
        },
        "Mandatory Parameters": [
            "input",
            "indices",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.max_unpool2d": {
        "Parameter type": {
            "input": "Tensor",
            "indices": "Tensor",
            "kernel_size": "int or tuple",
            "stride": "int or tuple",
            "padding": "int or tuple",
            "output_size": "tuple or int"
        },
        "Mandatory Parameters": [
            "input",
            "indices",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.max_unpool3d": {
        "Parameter type": {
            "input": "Tensor",
            "indices": "Tensor",
            "kernel_size": "int or tuple",
            "stride": "int or tuple",
            "padding": "int or tuple",
            "output_size": "tuple or None"
        },
        "Mandatory Parameters": [
            "input",
            "indices",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.lp_pool1d": {
        "Parameter type": {
            "input": "Tensor (shape: (N, C, L_in) or (C, L_in))",
            "norm_type": "int",
            "kernel_size": "int",
            "stride": "int (default: kernel_size)",
            "ceil_mode": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input",
            "norm_type",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.lp_pool2d": {
        "Parameter type": {
            "input": "Tensor (shape: (N, C, H_in, W_in) or (C, H_in, W_in))",
            "norm_type": "float",
            "kernel_size": "Union[int, Tuple[int, int]]",
            "stride": "Union[int, Tuple[int, int]] (default: None)",
            "ceil_mode": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input",
            "norm_type",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.adaptive_max_pool1d": {
        "Parameter type": {
            "input": "Tensor",
            "output_size": "int",
            "return_indices": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input",
            "output_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.adaptive_max_pool2d": {
        "Parameter type": {
            "input": "Tensor",
            "output_size": "Union[int, Tuple[int, int]]",
            "return_indices": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input",
            "output_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.adaptive_max_pool3d": {
        "Parameter type": {
            "input": "Tensor",
            "output_size": "Union[int, Tuple[int, int, int]]",
            "return_indices": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input",
            "output_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.adaptive_avg_pool1d": {
        "Parameter type": {
            "input": "Tensor",
            "output_size": "int"
        },
        "Mandatory Parameters": [
            "input",
            "output_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.adaptive_avg_pool2d": {
        "Parameter type": {
            "input": "Tensor",
            "output_size": "Union[int, Tuple[int, int]]"
        },
        "Mandatory Parameters": [
            "input",
            "output_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.adaptive_avg_pool3d": {
        "Parameter type": {
            "input": "Tensor",
            "output_size": "Union[int, Tuple[int, int, int]]"
        },
        "Mandatory Parameters": [
            "input",
            "output_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.threshold": {
        "Parameter type": {
            "input": "Tensor",
            "threshold": "float",
            "value": "float",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input",
            "threshold",
            "value"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.threshold_": {
        "Parameter type": {
            "input": "Tensor",
            "threshold": "float",
            "value": "float"
        },
        "Mandatory Parameters": [
            "input",
            "threshold",
            "value"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.relu": {
        "Parameter type": {
            "input": "Tensor",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.relu_": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.hardtanh": {
        "Parameter type": {
            "input": "Tensor",
            "min_val": "float (default: -1.)",
            "max_val": "float (default: 1.)",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.hardtanh_": {
        "Parameter type": {
            "input": "Tensor",
            "min_val": "float (default: -1.)",
            "max_val": "float (default: 1.)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.hardswish": {
        "Parameter type": {
            "input": "Tensor",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.relu6": {
        "Parameter type": {
            "input": "Tensor",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.elu": {
        "Parameter type": {
            "input": "Tensor",
            "alpha": "float (default: 1.0)",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.elu_": {
        "Parameter type": {
            "input": "Tensor",
            "alpha": "float (default: 1.0)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.selu": {
        "Parameter type": {
            "input": "Tensor",
            "inplace": "bool (optional)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.celu": {
        "Parameter type": {
            "input": "Tensor",
            "alpha": "float (default: 1.0)",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.leaky_relu": {
        "Parameter type": {
            "input": "Tensor",
            "negative_slope": "float (default: 0.01)",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.leaky_relu_": {
        "Parameter type": {
            "input": "Tensor",
            "negative_slope": "float (default: 0.01)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.prelu": {
        "Parameter type": {
            "input": "Tensor",
            "weight": "Tensor"
        },
        "Mandatory Parameters": [
            "input",
            "weight"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.rrelu": {
        "Parameter type": {
            "input": "Tensor",
            "lower": "float (default: 1/8)",
            "upper": "float (default: 1/3)",
            "training": "bool (default: False)",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.rrelu_": {
        "Parameter type": {
            "input": "Tensor",
            "lower": "float (default: 1/8)",
            "upper": "float (default: 1/3)",
            "training": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.glu": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int (default: -1)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.gelu": {
        "Parameter type": {
            "input": "Tensor",
            "approximate": "str (default: 'none'; options: 'none', 'tanh')"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.logsigmoid": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.hardshrink": {
        "Parameter type": {
            "input": "Tensor",
            "lambd": "float (default: 0.5)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.tanhshrink": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.softsign": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.softplus": {
        "Parameter type": {
            "input": "Tensor",
            "beta": "float (default: 1)",
            "threshold": "float (default: 20)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.softmin": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int",
            "dtype": "Optional[torch.dtype]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.softmax": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int",
            "_stacklevel": "int",
            "dtype": "Optional[torch.dtype]"
        },
        "Mandatory Parameters": [
            "input",
            "dim"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.softshrink": {
        "Parameter type": {
            "input": "Tensor",
            "lambd": "float (default: 0.5)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.gumbel_softmax": {
        "Parameter type": {
            "logits": "Tensor",
            "tau": "float (default: 1)",
            "hard": "bool (default: False)",
            "eps": "float (default: 1e-10)",
            "dim": "int (default: -1)"
        },
        "Mandatory Parameters": [
            "logits"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.log_softmax": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int",
            "_stacklevel": "int",
            "dtype": "Optional[torch.dtype]"
        },
        "Mandatory Parameters": [
            "input",
            "dim"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.tanh": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.sigmoid": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.hardsigmoid": {
        "Parameter type": {
            "input": "Tensor",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.silu": {
        "Parameter type": {
            "input": "Tensor",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.batch_norm": {
        "Parameter type": {
            "input": "Tensor",
            "running_mean": "Optional[Tensor]",
            "running_var": "Optional[Tensor]",
            "weight": "Optional[Tensor]",
            "bias": "Optional[Tensor]",
            "training": "bool",
            "momentum": "float",
            "eps": "float"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.instance_norm": {
        "Parameter type": {
            "input": "Tensor",
            "running_mean": "Optional[Tensor]",
            "running_var": "Optional[Tensor]",
            "weight": "Optional[Tensor]",
            "bias": "Optional[Tensor]",
            "use_input_stats": "bool",
            "momentum": "float",
            "eps": "float"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.layer_norm": {
        "Parameter type": {
            "input": "Tensor",
            "normalized_shape": "int or list or torch.Size",
            "weight": "Optional[Tensor]",
            "bias": "Optional[Tensor]",
            "eps": "float (default: 1e-05)",
            "elementwise_affine": "bool (default: True)"
        },
        "Mandatory Parameters": [
            "input",
            "normalized_shape"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.local_response_norm": {
        "Parameter type": {
            "input": "Tensor (shape: (N, C, *))",
            "size": "int",
            "alpha": "float (default: 0.0001)",
            "beta": "float (default: 0.75)",
            "k": "float (default: 1.0)"
        },
        "Mandatory Parameters": [
            "input",
            "size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.normalize": {
        "Parameter type": {
            "input": "Tensor",
            "p": "float",
            "dim": "int or tuple of ints",
            "eps": "float",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.linear": {
        "Parameter type": {
            "input": "Tensor (shape: (*, in_features))",
            "weight": "Tensor (shape: (out_features, in_features) or (in_features))",
            "bias": "Optional[Tensor] (shape: (out_features) or ())"
        },
        "Mandatory Parameters": [
            "input",
            "weight"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.bilinear": {
        "Parameter type": {
            "input1": "Tensor (shape: (N, *, H_{in1}))",
            "input2": "Tensor (shape: (N, *, H_{in2}))",
            "weight": "Tensor (shape: (out_features, in1_features, in2_features))",
            "bias": "Optional[Tensor] (shape: (out_features))"
        },
        "Mandatory Parameters": [
            "input1",
            "input2",
            "weight"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.dropout": {
        "Parameter type": {
            "input": "Tensor",
            "p": "float (default: 0.5)",
            "training": "bool (default: True)",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.alpha_dropout": {
        "Parameter type": {
            "input": "Tensor",
            "p": "float (default: 0.5)",
            "training": "bool (default: False)",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.feature_alpha_dropout": {
        "Parameter type": {
            "input": "Tensor",
            "p": "float (default: 0.5)",
            "training": "bool (default: False)",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.dropout2d": {
        "Parameter type": {
            "input": "Tensor",
            "p": "float (default: 0.5)",
            "training": "bool (default: True)",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.dropout3d": {
        "Parameter type": {
            "input": "Tensor",
            "p": "float (default: 0.5)",
            "training": "bool (default: True)",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.embedding": {
        "Parameter type": {
            "input": "LongTensor",
            "weight": "Tensor",
            "padding_idx": "Optional[int]",
            "max_norm": "Optional[float]",
            "norm_type": "float",
            "scale_grad_by_freq": "bool",
            "sparse": "bool"
        },
        "Mandatory Parameters": [
            "input",
            "weight"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.embedding_bag": {
        "Parameter type": {
            "input": "LongTensor",
            "weight": "Tensor",
            "offsets": "Optional[LongTensor]",
            "max_norm": "Optional[float]",
            "norm_type": "Optional[float]",
            "scale_grad_by_freq": "bool",
            "mode": "str",
            "sparse": "bool",
            "per_sample_weights": "Optional[Tensor]",
            "include_last_offset": "bool",
            "padding_idx": "Optional[int]"
        },
        "Mandatory Parameters": [
            "input",
            "weight"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": [
            [
                "scale_grad_by_freq",
                "mode",
                "(scale_grad_by_freq=True)&(mode='max')"
            ],
            [
                "sparse",
                "mode",
                "(sparse=True)&(mode='max')"
            ]
        ]
    },
    "torch.nn.functional.one_hot": {
        "Parameter type": {
            "tensor": "LongTensor",
            "num_classes": "int (default: -1)"
        },
        "Mandatory Parameters": [
            "tensor"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.pairwise_distance": {
        "Parameter type": {
            "x1": "Tensor",
            "x2": "Tensor",
            "p": "float (optional)",
            "eps": "float (optional)",
            "keepdim": "bool (optional)"
        },
        "Mandatory Parameters": [
            "x1",
            "x2"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.cosine_similarity": {
        "Parameter type": {
            "x1": "Tensor",
            "x2": "Tensor",
            "dim": "int (optional, default: 1)",
            "eps": "float (optional, default: 1e-8)"
        },
        "Mandatory Parameters": [
            "x1",
            "x2"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.pdist": {
        "Parameter type": {
            "input": "Tensor (shape: (N, M))",
            "p": "float (default: 2)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.binary_cross_entropy": {
        "Parameter type": {
            "input": "Tensor",
            "target": "Tensor",
            "weight": "Optional[Tensor]",
            "size_average": "Optional[bool]",
            "reduce": "Optional[bool]",
            "reduction": "Optional[str]"
        },
        "Mandatory Parameters": [
            "input",
            "target"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.binary_cross_entropy_with_logits": {
        "Parameter type": {
            "input": "Tensor",
            "target": "Tensor",
            "weight": "Optional[Tensor]",
            "size_average": "Optional[bool]",
            "reduce": "Optional[bool]",
            "reduction": "Optional[str]",
            "pos_weight": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "target"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.poisson_nll_loss": {
        "Parameter type": {
            "input": "Tensor",
            "target": "Tensor",
            "log_input": "bool (default: True)",
            "full": "bool (default: False)",
            "size_average": "Optional[bool] (deprecated)",
            "eps": "float (default: 1e-08)",
            "reduce": "Optional[bool] (deprecated)",
            "reduction": "str (default: 'mean')"
        },
        "Mandatory Parameters": [
            "input",
            "target"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "reduce",
                "reduction"
            ],
            [
                "size_average",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.cosine_embedding_loss": {
        "Parameter type": {
            "input1": "Tensor (shape: (N, D) or (D))",
            "input2": "Tensor (shape: (N, D) or (D))",
            "target": "Tensor (shape: (N) or ())",
            "margin": "float (optional, default: 0)",
            "size_average": "bool (optional, deprecated)",
            "reduce": "bool (optional, deprecated)",
            "reduction": "str (optional, default: 'mean')"
        },
        "Mandatory Parameters": [
            "input1",
            "input2",
            "target"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.cross_entropy": {
        "Parameter type": {
            "input": "Tensor",
            "target": "Tensor",
            "weight": "Optional[Tensor]",
            "size_average": "Optional[bool]",
            "ignore_index": "int",
            "reduce": "Optional[bool]",
            "reduction": "Optional[str]",
            "label_smoothing": "Optional[float]"
        },
        "Mandatory Parameters": [
            "input",
            "target"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.ctc_loss": {
        "Parameter type": {
            "log_probs": "Tensor (shape: (T, N, C) or (T, C))",
            "targets": "Tensor (shape: (N, S) or (sum(target_lengths)))",
            "input_lengths": "Tensor (shape: (N) or ())",
            "target_lengths": "Tensor (shape: (N) or ())",
            "blank": "int (optional, default: 0)",
            "reduction": "str (optional, default: 'mean')",
            "zero_infinity": "bool (optional, default: False)"
        },
        "Mandatory Parameters": [
            "log_probs",
            "targets",
            "input_lengths",
            "target_lengths"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.hinge_embedding_loss": {
        "Parameter type": {
            "input": "Tensor",
            "target": "Tensor",
            "margin": "float (default: 1.0)",
            "size_average": "Optional[bool] (default: None)",
            "reduce": "Optional[bool] (default: None)",
            "reduction": "str (default: 'mean')"
        },
        "Mandatory Parameters": [
            "input",
            "target"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.kl_div": {
        "Parameter type": {
            "input": "Tensor",
            "target": "Tensor",
            "size_average": "Optional[bool]",
            "reduce": "Optional[bool]",
            "reduction": "Optional[str]",
            "log_target": "Optional[bool]"
        },
        "Mandatory Parameters": [
            "input",
            "target"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.l1_loss": {
        "Parameter type": {
            "input": "Tensor",
            "target": "Tensor",
            "size_average": "Optional[bool]",
            "reduce": "Optional[bool]",
            "reduction": "Optional[str]"
        },
        "Mandatory Parameters": [
            "input",
            "target"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.mse_loss": {
        "Parameter type": {
            "input": "Tensor",
            "target": "Tensor",
            "size_average": "Optional[bool]",
            "reduce": "Optional[bool]",
            "reduction": "Optional[str]"
        },
        "Mandatory Parameters": [
            "input",
            "target"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.margin_ranking_loss": {
        "Parameter type": {
            "input1": "Tensor",
            "input2": "Tensor",
            "target": "Tensor",
            "margin": "float (optional)",
            "size_average": "bool (optional)",
            "reduce": "bool (optional)",
            "reduction": "str (optional)"
        },
        "Mandatory Parameters": [
            "input1",
            "input2",
            "target"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.multilabel_margin_loss": {
        "Parameter type": {
            "input": "Tensor",
            "target": "Tensor",
            "size_average": "Optional[bool]",
            "reduce": "Optional[bool]",
            "reduction": "Optional[str]"
        },
        "Mandatory Parameters": [
            "input",
            "target"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.multilabel_soft_margin_loss": {
        "Parameter type": {
            "input": "Tensor",
            "target": "Tensor",
            "weight": "Optional[Tensor]",
            "size_average": "Optional[bool]",
            "reduce": "Optional[bool]",
            "reduction": "Optional[str]"
        },
        "Mandatory Parameters": [
            "input",
            "target"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.multi_margin_loss": {
        "Parameter type": {
            "input": "Tensor",
            "target": "Tensor",
            "p": "int (default: 1)",
            "margin": "float (default: 1.0)",
            "weight": "Optional[Tensor]",
            "size_average": "Optional[bool]",
            "reduce": "Optional[bool]",
            "reduction": "str (default: 'mean')"
        },
        "Mandatory Parameters": [
            "input",
            "target"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "reduce",
                "reduction"
            ],
            [
                "size_average",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.nll_loss": {
        "Parameter type": {
            "input": "Tensor",
            "target": "Tensor",
            "weight": "Optional[Tensor]",
            "size_average": "Optional[bool]",
            "ignore_index": "int",
            "reduce": "Optional[bool]",
            "reduction": "str"
        },
        "Mandatory Parameters": [
            "input",
            "target"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "reduce",
                "reduction"
            ],
            [
                "size_average",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.smooth_l1_loss": {
        "Parameter type": {
            "input": "Tensor",
            "target": "Tensor",
            "size_average": "Optional[bool]",
            "reduce": "Optional[bool]",
            "reduction": "Optional[str]",
            "beta": "Optional[float]"
        },
        "Mandatory Parameters": [
            "input",
            "target"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.soft_margin_loss": {
        "Parameter type": {
            "input": "Tensor",
            "target": "Tensor",
            "size_average": "Optional[bool]",
            "reduce": "Optional[bool]",
            "reduction": "Optional[str]"
        },
        "Mandatory Parameters": [
            "input",
            "target"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.triplet_margin_loss": {
        "Parameter type": {
            "anchor": "Tensor",
            "positive": "Tensor",
            "negative": "Tensor",
            "margin": "float (default: 1.0)",
            "p": "int (default: 2)",
            "eps": "float (default: 1e-06)",
            "swap": "bool (default: False)",
            "size_average": "bool (deprecated)",
            "reduce": "bool (deprecated)",
            "reduction": "str (default: 'mean')"
        },
        "Mandatory Parameters": [
            "anchor",
            "positive",
            "negative"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "reduce",
                "reduction"
            ],
            [
                "size_average",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.triplet_margin_with_distance_loss": {
        "Parameter type": {
            "anchor": "Tensor",
            "positive": "Tensor",
            "negative": "Tensor",
            "distance_function": "Optional[Callable]",
            "margin": "float (default: 1.0)",
            "swap": "bool (default: False)",
            "reduction": "str (default: 'mean')"
        },
        "Mandatory Parameters": [
            "anchor",
            "positive",
            "negative"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.pixel_shuffle": {
        "Parameter type": {
            "input": "Tensor",
            "upscale_factor": "int"
        },
        "Mandatory Parameters": [
            "input",
            "upscale_factor"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.pixel_unshuffle": {
        "Parameter type": {
            "input": "Tensor",
            "downscale_factor": "int"
        },
        "Mandatory Parameters": [
            "input",
            "downscale_factor"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.pad": {
        "Parameter type": {
            "input": "Tensor",
            "pad": "tuple",
            "mode": "str",
            "value": "Optional[int]"
        },
        "Mandatory Parameters": [
            "input",
            "pad"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.interpolate": {
        "Parameter type": {
            "input": "Tensor",
            "size": "int or Tuple[int] or Tuple[int, int] or Tuple[int, int, int]",
            "scale_factor": "float or Tuple[float]",
            "mode": "str",
            "align_corners": "Optional[bool]",
            "recompute_scale_factor": "Optional[bool]",
            "antialias": "Optional[bool]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size",
                "scale_factor"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.upsample": {
        "Parameter type": {
            "input": "Tensor",
            "size": "Union[int, Tuple[int], Tuple[int, int], Tuple[int, int, int]]",
            "scale_factor": "Union[float, Tuple[float]]",
            "mode": "str",
            "align_corners": "Optional[bool]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size",
                "scale_factor"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.upsample_nearest": {
        "Parameter type": {
            "input": "Tensor",
            "size": "int or Tuple[int, int] or Tuple[int, int, int]",
            "scale_factor": "int"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size",
                "scale_factor"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.upsample_bilinear": {
        "Parameter type": {
            "input": "Tensor",
            "size": "Optional[Union[int, Tuple[int, int]]]",
            "scale_factor": "Optional[Union[int, Tuple[int, int]]]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size",
                "scale_factor"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.grid_sample": {
        "Parameter type": {
            "input": "Tensor",
            "grid": "Tensor",
            "mode": "str",
            "padding_mode": "str",
            "align_corners": "Optional[bool]"
        },
        "Mandatory Parameters": [
            "input",
            "grid"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.functional.affine_grid": {
        "Parameter type": {
            "theta": "Tensor",
            "size": "torch.Size",
            "align_corners": "Optional[bool]"
        },
        "Mandatory Parameters": [
            "theta",
            "size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.is_tensor": {
        "Parameter type": {
            "obj": "object"
        },
        "Mandatory Parameters": [
            "obj"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.is_storage": {
        "Parameter type": {
            "obj": "Object"
        },
        "Mandatory Parameters": [
            "obj"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.is_complex": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.is_floating_point": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.is_nonzero": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.set_default_dtype": {
        "Parameter type": {
            "d": "torch.dtype"
        },
        "Mandatory Parameters": [
            "d"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.get_default_dtype": {
        "Parameter type": {},
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.set_default_tensor_type": {
        "Parameter type": {
            "t": "type or string"
        },
        "Mandatory Parameters": [
            "t"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.numel": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.set_printoptions": {
        "Parameter type": {
            "precision": "int (default: 4)",
            "threshold": "int (default: 1000)",
            "edgeitems": "int (default: 3)",
            "linewidth": "int (default: 80)",
            "profile": "str (default: None; options: 'default', 'short', 'full')",
            "sci_mode": "bool or None (default: None)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "profile",
                "precision"
            ],
            [
                "profile",
                "threshold"
            ],
            [
                "profile",
                "edgeitems"
            ],
            [
                "profile",
                "linewidth"
            ],
            [
                "profile",
                "sci_mode"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.set_flush_denormal": {
        "Parameter type": {
            "mode": "bool"
        },
        "Mandatory Parameters": [
            "mode"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.rand": {
        "Parameter type": {
            "size": "int...",
            "generator": "Optional[torch.Generator]",
            "out": "Optional[Tensor]",
            "dtype": "Optional[torch.dtype]",
            "layout": "torch.layout",
            "device": "Optional[torch.device]",
            "requires_grad": "bool",
            "pin_memory": "bool"
        },
        "Mandatory Parameters": [
            "size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.rand_like": {
        "Parameter type": {
            "input": "Tensor",
            "dtype": "Optional[torch.dtype]",
            "layout": "Optional[torch.layout]",
            "device": "Optional[torch.device]",
            "requires_grad": "bool",
            "memory_format": "Optional[torch.memory_format]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.randn": {
        "Parameter type": {
            "size": "int...",
            "generator": "Optional[torch.Generator]",
            "out": "Optional[Tensor]",
            "dtype": "Optional[torch.dtype]",
            "layout": "torch.layout",
            "device": "Optional[torch.device]",
            "requires_grad": "bool",
            "pin_memory": "bool"
        },
        "Mandatory Parameters": [
            "size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.randn_like": {
        "Parameter type": {
            "input": "Tensor",
            "dtype": "Optional[torch.dtype]",
            "layout": "Optional[torch.layout]",
            "device": "Optional[torch.device]",
            "requires_grad": "bool",
            "memory_format": "Optional[torch.memory_format]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.randint": {
        "Parameter type": {
            "low": "int (optional)",
            "high": "int",
            "size": "tuple",
            "generator": "Optional[torch.Generator]",
            "out": "Optional[Tensor]",
            "dtype": "Optional[torch.dtype]",
            "layout": "torch.layout (default: torch.strided)",
            "device": "Optional[torch.device]",
            "requires_grad": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "high",
            "size"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "out",
                "dtype"
            ],
            [
                "out",
                "layout"
            ],
            [
                "out",
                "device"
            ],
            [
                "out",
                "requires_grad"
            ],
            [
                "generator",
                "out"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.randint_like": {
        "Parameter type": {
            "input": "Tensor",
            "low": "int (optional)",
            "high": "int",
            "dtype": "torch.dtype (optional)",
            "layout": "torch.layout (optional)",
            "device": "torch.device (optional)",
            "requires_grad": "bool (optional)",
            "memory_format": "torch.memory_format (optional)"
        },
        "Mandatory Parameters": [
            "input",
            "high"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.randperm": {
        "Parameter type": {
            "n": "int",
            "generator": "Optional[torch.Generator]",
            "out": "Optional[Tensor]",
            "dtype": "Optional[torch.dtype]",
            "layout": "Optional[torch.layout]",
            "device": "Optional[torch.device]",
            "requires_grad": "bool",
            "pin_memory": "bool"
        },
        "Mandatory Parameters": [
            "n"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.empty": {
        "Parameter type": {
            "size": "int...",
            "out": "Optional[Tensor]",
            "dtype": "Optional[torch.dtype]",
            "layout": "torch.layout",
            "device": "Optional[torch.device]",
            "requires_grad": "bool",
            "pin_memory": "bool",
            "memory_format": "torch.memory_format"
        },
        "Mandatory Parameters": [
            "size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.tensor": {
        "Parameter type": {
            "data": "array_like",
            "dtype": "Optional[torch.dtype]",
            "device": "Optional[torch.device]",
            "requires_grad": "Optional[bool]",
            "pin_memory": "Optional[bool]"
        },
        "Mandatory Parameters": [
            "data"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.sparse_coo_tensor": {
        "Parameter type": {
            "indices": "array_like",
            "values": "array_like",
            "size": "Optional[Union[list, tuple, torch.Size]]",
            "dtype": "Optional[torch.dtype]",
            "device": "Optional[torch.device]",
            "pin_memory": "bool",
            "requires_grad": "bool",
            "check_invariants": "Optional[bool]",
            "is_coalesced": "Optional[bool]"
        },
        "Mandatory Parameters": [
            "indices",
            "values"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.as_tensor": {
        "Parameter type": {
            "data": "array_like",
            "dtype": "Optional[torch.dtype]",
            "device": "Optional[torch.device]"
        },
        "Mandatory Parameters": [
            "data"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.as_strided": {
        "Parameter type": {
            "input": "Tensor",
            "size": "tuple or ints",
            "stride": "tuple or ints",
            "storage_offset": "int, optional"
        },
        "Mandatory Parameters": [
            "input",
            "size",
            "stride"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.from_numpy": {
        "Parameter type": {
            "ndarray": "numpy.ndarray"
        },
        "Mandatory Parameters": [
            "ndarray"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.zeros": {
        "Parameter type": {
            "size": "int...",
            "out": "Optional[Tensor]",
            "dtype": "Optional[torch.dtype]",
            "layout": "torch.layout",
            "device": "Optional[torch.device]",
            "requires_grad": "bool"
        },
        "Mandatory Parameters": [
            "size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.zeros_like": {
        "Parameter type": {
            "input": "Tensor",
            "dtype": "Optional[torch.dtype]",
            "layout": "Optional[torch.layout]",
            "device": "Optional[torch.device]",
            "requires_grad": "Optional[bool]",
            "memory_format": "Optional[torch.memory_format]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.ones": {
        "Parameter type": {
            "size": "int...",
            "out": "Optional[Tensor]",
            "dtype": "Optional[torch.dtype]",
            "layout": "torch.layout",
            "device": "Optional[torch.device]",
            "requires_grad": "bool"
        },
        "Mandatory Parameters": [
            "size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.ones_like": {
        "Parameter type": {
            "input": "Tensor",
            "dtype": "Optional[torch.dtype]",
            "layout": "Optional[torch.layout]",
            "device": "Optional[torch.device]",
            "requires_grad": "Optional[bool]",
            "memory_format": "Optional[torch.memory_format]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.arange": {
        "Parameter type": {
            "start": "Number (default: 0)",
            "end": "Number",
            "step": "Number (default: 1)",
            "out": "Optional[Tensor]",
            "dtype": "Optional[torch.dtype]",
            "layout": "Optional[torch.layout] (default: torch.strided)",
            "device": "Optional[torch.device]",
            "requires_grad": "Optional[bool] (default: False)"
        },
        "Mandatory Parameters": [
            "end"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.range": {
        "Parameter type": {
            "start": "float (default: 0)",
            "end": "float",
            "step": "float (default: 1)",
            "out": "Optional[Tensor]",
            "dtype": "Optional[torch.dtype]",
            "layout": "torch.layout (default: torch.strided)",
            "device": "Optional[torch.device]",
            "requires_grad": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "end"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.linspace": {
        "Parameter type": {
            "start": "float or Tensor",
            "end": "float or Tensor",
            "steps": "int",
            "out": "Tensor, optional",
            "dtype": "torch.dtype, optional",
            "layout": "torch.layout, optional",
            "device": "torch.device, optional",
            "requires_grad": "bool, optional"
        },
        "Mandatory Parameters": [
            "start",
            "end",
            "steps"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.logspace": {
        "Parameter type": {
            "start": "float or Tensor",
            "end": "float or Tensor",
            "steps": "int",
            "base": "float",
            "out": "Tensor (optional)",
            "dtype": "torch.dtype (optional)",
            "layout": "torch.layout (optional)",
            "device": "torch.device (optional)",
            "requires_grad": "bool (optional)"
        },
        "Mandatory Parameters": [
            "start",
            "end",
            "steps"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.eye": {
        "Parameter type": {
            "n": "int",
            "m": "Optional[int]",
            "out": "Optional[Tensor]",
            "dtype": "Optional[torch.dtype]",
            "layout": "torch.layout",
            "device": "Optional[torch.device]",
            "requires_grad": "bool"
        },
        "Mandatory Parameters": [
            "n"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.empty_like": {
        "Parameter type": {
            "input": "Tensor",
            "dtype": "Optional[torch.dtype]",
            "layout": "Optional[torch.layout]",
            "device": "Optional[torch.device]",
            "requires_grad": "Optional[bool]",
            "memory_format": "Optional[torch.memory_format]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.empty_strided": {
        "Parameter type": {
            "size": "tuple of int",
            "stride": "tuple of int",
            "dtype": "Optional[torch.dtype]",
            "layout": "Optional[torch.layout]",
            "device": "Optional[torch.device]",
            "requires_grad": "bool",
            "pin_memory": "bool"
        },
        "Mandatory Parameters": [
            "size",
            "stride"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.full": {
        "Parameter type": {
            "size": "int...",
            "fill_value": "Scalar",
            "out": "Optional[Tensor]",
            "dtype": "Optional[torch.dtype]",
            "layout": "torch.layout",
            "device": "Optional[torch.device]",
            "requires_grad": "bool"
        },
        "Mandatory Parameters": [
            "size",
            "fill_value"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.full_like": {
        "Parameter type": {
            "input": "Tensor",
            "fill_value": "number",
            "dtype": "Optional[torch.dtype]",
            "layout": "Optional[torch.layout]",
            "device": "Optional[torch.device]",
            "requires_grad": "Optional[bool]",
            "memory_format": "Optional[torch.memory_format]"
        },
        "Mandatory Parameters": [
            "input",
            "fill_value"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.quantize_per_tensor": {
        "Parameter type": {
            "input": "Tensor or list of tensors",
            "scale": "float or Tensor",
            "zero_point": "int or Tensor",
            "dtype": "torch.dtype"
        },
        "Mandatory Parameters": [
            "input",
            "scale",
            "zero_point",
            "dtype"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.quantize_per_channel": {
        "Parameter type": {
            "input": "Tensor",
            "scales": "Tensor",
            "zero_points": "Tensor",
            "axis": "int",
            "dtype": "torch.dtype"
        },
        "Mandatory Parameters": [
            "input",
            "scales",
            "zero_points",
            "axis",
            "dtype"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.dequantize_2": {
        "Parameter type": {
            "tensors": "sequence of Tensors"
        },
        "Mandatory Parameters": [
            "tensors"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.complex": {
        "Parameter type": {
            "real": "Tensor",
            "imag": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "real",
            "imag"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.imag": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.polar": {
        "Parameter type": {
            "abs": "Tensor (float or double)",
            "angle": "Tensor (same dtype as abs)",
            "out": "Optional[Tensor] (complex64 or complex128)"
        },
        "Mandatory Parameters": [
            "abs",
            "angle"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.angle": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.heaviside": {
        "Parameter type": {
            "input": "Tensor",
            "values": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "values"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.cat": {
        "Parameter type": {
            "tensors": "sequence of Tensors",
            "dim": "int (optional, default: 0)",
            "out": "Tensor (optional)"
        },
        "Mandatory Parameters": [
            "tensors"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.chunk": {
        "Parameter type": {
            "input": "Tensor",
            "chunks": "int",
            "dim": "int"
        },
        "Mandatory Parameters": [
            "input",
            "chunks"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.column_stack": {
        "Parameter type": {
            "tensors": "sequence of Tensors",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "tensors"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.dstack": {
        "Parameter type": {
            "tensors": "sequence of Tensors",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "tensors"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.gather": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int",
            "index": "LongTensor",
            "sparse_grad": "bool (optional)",
            "out": "Tensor (optional)"
        },
        "Mandatory Parameters": [
            "input",
            "dim",
            "index"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.hstack": {
        "Parameter type": {
            "tensors": "sequence of Tensors",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "tensors"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.index_select": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int",
            "index": "IntTensor or LongTensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "dim",
            "index"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.masked_select": {
        "Parameter type": {
            "input": "Tensor",
            "mask": "BoolTensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "mask"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.movedim": {
        "Parameter type": {
            "input": "Tensor",
            "source": "int or tuple of ints",
            "destination": "int or tuple of ints"
        },
        "Mandatory Parameters": [
            "input",
            "source",
            "destination"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.moveaxis": {
        "Parameter type": {
            "input": "Tensor",
            "source": "int or tuple of ints",
            "destination": "int or tuple of ints"
        },
        "Mandatory Parameters": [
            "input",
            "source",
            "destination"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.narrow": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int",
            "start": "int or Tensor",
            "length": "int"
        },
        "Mandatory Parameters": [
            "input",
            "dim",
            "start",
            "length"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nonzero": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[LongTensor]",
            "as_tuple": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.reshape": {
        "Parameter type": {
            "input": "Tensor",
            "shape": "tuple of int"
        },
        "Mandatory Parameters": [
            "input",
            "shape"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.row_stack": {
        "Parameter type": {
            "tensors": "sequence of Tensors",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "tensors"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.vstack": {
        "Parameter type": {
            "tensors": "sequence of Tensors",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "tensors"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.scatter": {
        "Parameter type": {
            "dim": "int",
            "index": "LongTensor",
            "src": "Tensor",
            "reduce": "Optional[str]"
        },
        "Mandatory Parameters": [
            "dim",
            "index",
            "src"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.scatter_add": {
        "Parameter type": {
            "dim": "int",
            "index": "LongTensor",
            "src": "Tensor"
        },
        "Mandatory Parameters": [
            "dim",
            "index",
            "src"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.split": {
        "Parameter type": {
            "tensor": "Tensor",
            "split_size_or_sections": "Union[int, List[int]]",
            "dim": "int (default: 0)"
        },
        "Mandatory Parameters": [
            "tensor",
            "split_size_or_sections"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.squeeze": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "Optional[Union[int, Tuple[int]]]",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.stack": {
        "Parameter type": {
            "tensors": "sequence of Tensors",
            "dim": "int (optional, default: 0)",
            "out": "Tensor (optional)"
        },
        "Mandatory Parameters": [
            "tensors"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.swapaxes": {
        "Parameter type": {
            "input": "Tensor",
            "axis0": "int",
            "axis1": "int"
        },
        "Mandatory Parameters": [
            "input",
            "axis0",
            "axis1"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.transpose": {
        "Parameter type": {
            "input": "Tensor",
            "dim0": "int",
            "dim1": "int"
        },
        "Mandatory Parameters": [
            "input",
            "dim0",
            "dim1"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.swapdims": {
        "Parameter type": {
            "input": "Tensor",
            "dim0": "int",
            "dim1": "int"
        },
        "Mandatory Parameters": [
            "input",
            "dim0",
            "dim1"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.t": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.take": {
        "Parameter type": {
            "input": "Tensor",
            "index": "LongTensor"
        },
        "Mandatory Parameters": [
            "input",
            "index"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.tensor_split": {
        "Parameter type": {
            "input": "Tensor",
            "indices_or_sections": "Union[int, Tensor, List[int], Tuple[int]]",
            "dim": "int (optional)"
        },
        "Mandatory Parameters": [
            "input",
            "indices_or_sections"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.tile": {
        "Parameter type": {
            "input": "Tensor",
            "dims": "tuple"
        },
        "Mandatory Parameters": [
            "input",
            "dims"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.unbind": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int (default: 0)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.unsqueeze": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int"
        },
        "Mandatory Parameters": [
            "input",
            "dim"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.where_2": {
        "Parameter type": {
            "condition": "Tensor (boolean)"
        },
        "Mandatory Parameters": [
            "condition"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.Generator": {
        "Parameter type": {
            "device": "torch.device (optional)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.seed": {
        "Parameter type": {},
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.manual_seed": {
        "Parameter type": {
            "seed": "int"
        },
        "Mandatory Parameters": [
            "seed"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.initial_seed": {
        "Parameter type": {},
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.get_rng_state": {
        "Parameter type": {},
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.set_rng_state": {
        "Parameter type": {
            "new_state": "torch.ByteTensor"
        },
        "Mandatory Parameters": [
            "new_state"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.bernoulli": {
        "Parameter type": {
            "input": "Tensor",
            "generator": "Optional[torch.Generator]",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.multinomial": {
        "Parameter type": {
            "input": "Tensor",
            "num_samples": "int",
            "replacement": "bool (optional)",
            "generator": "Optional[torch.Generator]",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "num_samples"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.normal_3": {
        "Parameter type": {
            "mean": "float (optional)",
            "std": "Tensor",
            "generator": "Optional[Generator]",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "std"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.normal_1": {
        "Parameter type": {
            "mean": "Tensor",
            "std": "float (optional)",
            "out": "Tensor (optional)"
        },
        "Mandatory Parameters": [
            "mean"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.normal_2": {
        "Parameter type": {
            "mean": "float",
            "std": "float",
            "size": "int...",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "mean",
            "std",
            "size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.poisson": {
        "Parameter type": {
            "input": "Tensor",
            "generator": "Optional[torch.Generator]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.quasirandom.SobolEngine": {
        "Parameter type": {
            "dimension": "Int",
            "scramble": "bool (optional)",
            "seed": "Int (optional)"
        },
        "Mandatory Parameters": [
            "dimension"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.save": {
        "Parameter type": {
            "obj": "object",
            "f": "Union[file-like object, str, os.PathLike]",
            "pickle_module": "module (default: pickle)",
            "pickle_protocol": "int (default: DEFAULT_PROTOCOL)",
            "_use_new_zipfile_serialization": "bool (default: True)"
        },
        "Mandatory Parameters": [
            "obj",
            "f"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.load": {
        "Parameter type": {
            "f": "file-like object or string/PathLike",
            "map_location": "callable, torch.device, string, dict, or None (default: None)",
            "pickle_module": "module (default: pickle)",
            "weights_only": "bool (default: False)",
            "mmap": "bool or None (default: None)",
            "pickle_load_args": "dict (optional keyword arguments)"
        },
        "Mandatory Parameters": [
            "f"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.get_num_threads": {
        "Parameter type": {},
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.set_num_threads": {
        "Parameter type": {
            "int": "int"
        },
        "Mandatory Parameters": [
            "int"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.get_num_interop_threads": {
        "Parameter type": {},
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.set_num_interop_threads": {
        "Parameter type": {
            "int": "int"
        },
        "Mandatory Parameters": [
            "int"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.set_grad_enabled": {
        "Parameter type": {
            "mode": "bool"
        },
        "Mandatory Parameters": [
            "mode"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.abs": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.absolute": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.acos": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.arccos": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.acosh": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.arccosh": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.add": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or Number",
            "alpha": "Number",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.addcdiv": {
        "Parameter type": {
            "input": "Tensor",
            "tensor1": "Tensor",
            "tensor2": "Tensor",
            "value": "Number (optional)",
            "out": "Tensor (optional)"
        },
        "Mandatory Parameters": [
            "input",
            "tensor1",
            "tensor2"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.addcmul": {
        "Parameter type": {
            "input": "Tensor",
            "tensor1": "Tensor",
            "tensor2": "Tensor",
            "value": "Number (optional)",
            "out": "Tensor (optional)"
        },
        "Mandatory Parameters": [
            "input",
            "tensor1",
            "tensor2"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.asin": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.arcsin": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.asinh": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.arcsinh": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.atan": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.arctan": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.atanh": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.arctanh": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.atan2": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.bitwise_not": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.bitwise_and": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.bitwise_or": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.bitwise_xor": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.ceil": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.clamp": {
        "Parameter type": {
            "input": "Tensor",
            "min": "Number or Tensor, optional",
            "max": "Number or Tensor, optional",
            "out": "Tensor, optional"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.max_1": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "Optional[Union[int, Tuple[int]]]",
            "keepdim": "Optional[bool]",
            "out": "Optional[Tuple[Tensor, LongTensor]]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.max_2": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.clip": {
        "Parameter type": {
            "input": "Tensor",
            "min": "Number or Tensor, optional",
            "max": "Number or Tensor, optional",
            "out": "Tensor, optional"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.conj": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.copysign": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or Number",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.cos": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.cosh": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.deg2rad": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.div": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or Number",
            "rounding_mode": "Optional[str]",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.divide": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or Number",
            "rounding_mode": "Optional[str]",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.digamma": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.erf": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.erfc": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.erfinv": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.exp": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.exp2": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.expm1": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.fake_quantize_per_channel_affine": {
        "Parameter type": {
            "input": "Tensor",
            "scale": "Tensor",
            "zero_point": "Tensor",
            "axis": "int32",
            "quant_min": "int64",
            "quant_max": "int64"
        },
        "Mandatory Parameters": [
            "input",
            "scale",
            "zero_point",
            "axis",
            "quant_min",
            "quant_max"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.fake_quantize_per_tensor_affine": {
        "Parameter type": {
            "input": "Tensor",
            "scale": "double scalar or float32 Tensor",
            "zero_point": "int64 scalar or int32 Tensor",
            "quant_min": "int64",
            "quant_max": "int64"
        },
        "Mandatory Parameters": [
            "input",
            "scale",
            "zero_point",
            "quant_min",
            "quant_max"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.fix": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.trunc": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.float_power": {
        "Parameter type": {
            "input": "Tensor or Number",
            "exponent": "Tensor or Number",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "exponent"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.floor": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.floor_divide": {
        "Parameter type": {
            "input": "Tensor or Number",
            "other": "Tensor or Number",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.fmod": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or Scalar",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.frac": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.ldexp": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.lerp": {
        "Parameter type": {
            "input": "Tensor",
            "end": "Tensor",
            "weight": "float or tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "end",
            "weight"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.lgamma": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.log": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.log10": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.log1p": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.log2": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.logaddexp": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.logaddexp2": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.logical_and": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.logical_not": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.logical_or": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.logical_xor": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.logit": {
        "Parameter type": {
            "input": "Tensor",
            "eps": "Optional[float]",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.hypot": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.i0": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.igamma": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.igammac": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.mul": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or Number",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.multiply": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or Number",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.mvlgamma": {
        "Parameter type": {
            "input": "Tensor",
            "p": "int"
        },
        "Mandatory Parameters": [
            "input",
            "p"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nan_to_num": {
        "Parameter type": {
            "input": "Tensor",
            "nan": "Number (optional)",
            "posinf": "Number (optional)",
            "neginf": "Number (optional)",
            "out": "Tensor (optional)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.neg": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.negative": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nextafter": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.polygamma": {
        "Parameter type": {
            "n": "int",
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "n",
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.pow_2": {
        "Parameter type": {
            "self": "float",
            "exponent": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "self",
            "exponent"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.rad2deg": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.real": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.reciprocal": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.remainder": {
        "Parameter type": {
            "input": "Tensor or Scalar",
            "other": "Tensor or Scalar",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.round": {
        "Parameter type": {
            "input": "Tensor",
            "decimals": "int",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.rsqrt": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.sigmoid": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.sign": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.sgn": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.signbit": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.sin": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.sinc": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.sinh": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.sqrt": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.square": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.sub": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or Number",
            "alpha": "Number",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.subtract": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or Number",
            "alpha": "Number",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.tan": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.tanh": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.true_divide": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or Number",
            "rounding_mode": "Optional[str]",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.xlogy": {
        "Parameter type": {
            "input": "Number or Tensor",
            "other": "Number or Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.argmax_2": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int",
            "keepdim": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "input",
            "dim"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.argmin": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "Optional[int]",
            "keepdim": "bool"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.amax": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int or tuple of ints",
            "keepdim": "bool",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "dim"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.amin": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int or tuple of ints",
            "keepdim": "bool",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "dim"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.all_2": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int or tuple of ints",
            "keepdim": "bool",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "dim"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.any_2": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int or tuple of ints",
            "keepdim": "bool",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "dim"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.min_1": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.min_2": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int",
            "keepdim": "bool (default: False)",
            "out": "Optional[tuple] (default: None)"
        },
        "Mandatory Parameters": [
            "input",
            "dim"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.dist": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "p": "float (optional)"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.logsumexp": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int or tuple of ints, optional",
            "keepdim": "bool",
            "out": "Tensor, optional"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.mean_2": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int or tuple of ints",
            "keepdim": "bool",
            "dtype": "Optional[torch.dtype]",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "dim"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.median_2": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int",
            "keepdim": "bool",
            "out": "Optional[Tuple[Tensor, Tensor]]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nanmedian_2": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int",
            "keepdim": "bool",
            "out": "Optional[Tuple[Tensor, Tensor]]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.mode": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int",
            "keepdim": "bool",
            "out": "Optional[tuple]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.norm": {
        "Parameter type": {
            "input": "Tensor",
            "p": "Union[int, float, str]",
            "dim": "Union[int, Tuple[int], List[int]]",
            "keepdim": "bool",
            "out": "Optional[Tensor]",
            "dtype": "Optional[torch.dtype]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nansum_2": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int or tuple of ints, optional",
            "keepdim": "bool",
            "dtype": "torch.dtype, optional"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.prod_2": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int",
            "keepdim": "bool",
            "dtype": "Optional[torch.dtype]"
        },
        "Mandatory Parameters": [
            "input",
            "dim"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.quantile": {
        "Parameter type": {
            "input": "Tensor",
            "q": "float or Tensor",
            "dim": "int",
            "keepdim": "bool",
            "interpolation": "str",
            "out": "Tensor, optional"
        },
        "Mandatory Parameters": [
            "input",
            "q"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nanquantile": {
        "Parameter type": {
            "input": "Tensor",
            "q": "float or Tensor",
            "dim": "int",
            "keepdim": "bool",
            "interpolation": "str",
            "out": "Tensor, optional"
        },
        "Mandatory Parameters": [
            "input",
            "q"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.std": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int or tuple of ints",
            "correction": "int",
            "keepdim": "bool",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.std_mean": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "Optional[Union[int, Tuple[int]]]",
            "correction": "int",
            "keepdim": "bool",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.sum_2": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int or tuple of ints, optional",
            "keepdim": "bool",
            "dtype": "torch.dtype, optional"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.unique": {
        "Parameter type": {
            "input": "Tensor",
            "sorted": "bool",
            "return_inverse": "bool",
            "return_counts": "bool",
            "dim": "Optional[int]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.unique_consecutive": {
        "Parameter type": {
            "input": "Tensor",
            "return_inverse": "bool",
            "return_counts": "bool",
            "dim": "int"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "return_inverse",
                "return_counts"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.var": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "Optional[Union[int, Tuple[int]]]",
            "correction": "int",
            "keepdim": "bool",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.var_mean": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "Optional[Union[int, Tuple[int]]]",
            "correction": "int",
            "keepdim": "bool",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.count_nonzero": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int or tuple of ints, optional"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.allclose": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "rtol": "float (optional)",
            "atol": "float (optional)",
            "equal_nan": "bool (optional)"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.argsort": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int (optional, default: -1)",
            "descending": "bool (optional, default: False)",
            "stable": "bool (optional, default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.eq": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or float",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.equal": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.ge": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or float",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.greater_equal": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or float",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.gt": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or float",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.greater": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or float",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.isclose": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "rtol": "float (optional)",
            "atol": "float (optional)",
            "equal_nan": "bool (optional)"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.isfinite": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.isinf": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.isposinf": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.isneginf": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.isnan": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.isreal": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.kthvalue": {
        "Parameter type": {
            "input": "Tensor",
            "k": "int",
            "dim": "Optional[int]",
            "keepdim": "bool",
            "out": "Optional[tuple]"
        },
        "Mandatory Parameters": [
            "input",
            "k"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.le": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or Scalar",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.less_equal": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or Scalar",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.lt": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or float",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.less": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or float",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.maximum": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.minimum": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.fmax": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.fmin": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.ne": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or float",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.not_equal": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor or float",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.sort": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int (optional, default: -1)",
            "descending": "bool (optional, default: False)",
            "stable": "bool (optional, default: False)",
            "out": "tuple (optional)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.topk": {
        "Parameter type": {
            "input": "Tensor",
            "k": "int",
            "dim": "Optional[int]",
            "largest": "Optional[bool]",
            "sorted": "Optional[bool]",
            "out": "Optional[tuple]"
        },
        "Mandatory Parameters": [
            "input",
            "k"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.msort": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.stft": {
        "Parameter type": {
            "input": "Tensor",
            "n_fft": "int",
            "hop_length": "Optional[int]",
            "win_length": "Optional[int]",
            "window": "Optional[Tensor]",
            "center": "bool",
            "pad_mode": "str",
            "normalized": "bool",
            "onesided": "Optional[bool]",
            "return_complex": "Optional[bool]"
        },
        "Mandatory Parameters": [
            "input",
            "n_fft"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.istft": {
        "Parameter type": {
            "input": "Tensor (complex)",
            "n_fft": "int",
            "hop_length": "Optional[int]",
            "win_length": "Optional[int]",
            "window": "Optional[Tensor]",
            "center": "bool",
            "normalized": "bool",
            "onesided": "Optional[bool]",
            "length": "Optional[int]",
            "return_complex": "bool"
        },
        "Mandatory Parameters": [
            "input",
            "n_fft"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.bartlett_window": {
        "Parameter type": {
            "window_length": "int",
            "periodic": "bool",
            "dtype": "Optional[torch.dtype]",
            "layout": "torch.layout",
            "device": "Optional[torch.device]",
            "requires_grad": "bool"
        },
        "Mandatory Parameters": [
            "window_length"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.blackman_window": {
        "Parameter type": {
            "window_length": "int",
            "periodic": "bool",
            "dtype": "Optional[torch.dtype]",
            "layout": "torch.layout",
            "device": "Optional[torch.device]",
            "requires_grad": "bool"
        },
        "Mandatory Parameters": [
            "window_length"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.hamming_window": {
        "Parameter type": {
            "window_length": "int",
            "periodic": "bool (optional)",
            "alpha": "float (optional)",
            "beta": "float (optional)",
            "dtype": "torch.dtype (optional)",
            "layout": "torch.layout (optional)",
            "device": "torch.device (optional)",
            "requires_grad": "bool (optional)"
        },
        "Mandatory Parameters": [
            "window_length"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.hann_window": {
        "Parameter type": {
            "window_length": "int",
            "periodic": "bool",
            "dtype": "Optional[torch.dtype]",
            "layout": "torch.layout",
            "device": "Optional[torch.device]",
            "requires_grad": "bool"
        },
        "Mandatory Parameters": [
            "window_length"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.kaiser_window": {
        "Parameter type": {
            "window_length": "int",
            "periodic": "bool",
            "beta": "float",
            "dtype": "Optional[torch.dtype]",
            "layout": "torch.layout",
            "device": "Optional[torch.device]",
            "requires_grad": "bool"
        },
        "Mandatory Parameters": [
            "window_length"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.atleast_1d": {
        "Parameter type": {
            "input": "Tensor or list of Tensors"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.atleast_2d": {
        "Parameter type": {
            "input": "Tensor or list of Tensors"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.atleast_3d": {
        "Parameter type": {
            "input": "Tensor or list of Tensors"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.bincount": {
        "Parameter type": {
            "input": "Tensor",
            "weights": "Optional[Tensor]",
            "minlength": "int"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.block_diag": {
        "Parameter type": {
            "*tensors": "One or more tensors with 0, 1, or 2 dimensions."
        },
        "Mandatory Parameters": [
            "*tensors"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.broadcast_tensors": {
        "Parameter type": {
            "*tensors": "any number of tensors of the same type"
        },
        "Mandatory Parameters": [
            "*tensors"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.broadcast_to": {
        "Parameter type": {
            "input": "Tensor",
            "shape": "list, tuple, or torch.Size"
        },
        "Mandatory Parameters": [
            "input",
            "shape"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.broadcast_shapes": {
        "Parameter type": {
            "*shapes": "Variable number of torch.Size objects"
        },
        "Mandatory Parameters": [
            "*shapes"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.bucketize": {
        "Parameter type": {
            "input": "Tensor or Scalar",
            "boundaries": "Tensor",
            "out_int32": "bool (optional)",
            "right": "bool (optional)",
            "out": "Tensor (optional)"
        },
        "Mandatory Parameters": [
            "input",
            "boundaries"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.cartesian_prod": {
        "Parameter type": {
            "*tensors": "any number of 1 dimensional tensors"
        },
        "Mandatory Parameters": [
            "*tensors"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.cdist": {
        "Parameter type": {
            "x1": "Tensor (shape: B × P × M)",
            "x2": "Tensor (shape: B × R × M)",
            "p": "float (default: 2.0)",
            "compute_mode": "str (default: 'use_mm_for_euclid_dist_if_necessary')"
        },
        "Mandatory Parameters": [
            "x1",
            "x2"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.clone": {
        "Parameter type": {
            "input": "Tensor",
            "memory_format": "torch.memory_format (optional)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.combinations": {
        "Parameter type": {
            "input": "Tensor (1D vector)",
            "r": "int (optional, default: 2)",
            "with_replacement": "bool (optional, default: False)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.cross": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "dim": "Optional[int]",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.cummax": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int",
            "out": "tuple, optional"
        },
        "Mandatory Parameters": [
            "input",
            "dim"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.cummin": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int",
            "out": "tuple, optional"
        },
        "Mandatory Parameters": [
            "input",
            "dim"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.cumprod": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int",
            "dtype": "Optional[torch.dtype]",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "dim"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.cumsum": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int",
            "dtype": "Optional[torch.dtype]",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "dim"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.diag": {
        "Parameter type": {
            "input": "Tensor",
            "diagonal": "int (optional)",
            "out": "Tensor (optional)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.diag_embed": {
        "Parameter type": {
            "input": "Tensor",
            "offset": "int (optional)",
            "dim1": "int (optional)",
            "dim2": "int (optional)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.diagflat": {
        "Parameter type": {
            "input": "Tensor",
            "offset": "int (optional)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.diagonal": {
        "Parameter type": {
            "input": "Tensor",
            "offset": "int (optional)",
            "dim1": "int (optional)",
            "dim2": "int (optional)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.diff": {
        "Parameter type": {
            "input": "Tensor",
            "n": "int (optional, default: 1)",
            "dim": "int (optional, default: -1)",
            "prepend": "Optional[Tensor]",
            "append": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.einsum": {
        "Parameter type": {
            "equation": "str",
            "operands": "List[Tensor]"
        },
        "Mandatory Parameters": [
            "equation",
            "operands"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.flatten": {
        "Parameter type": {
            "input": "Tensor",
            "start_dim": "int (default: 0)",
            "end_dim": "int (default: -1)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.flip": {
        "Parameter type": {
            "input": "Tensor",
            "dims": "list or tuple"
        },
        "Mandatory Parameters": [
            "input",
            "dims"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.fliplr": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.flipud": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.kron": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.rot90": {
        "Parameter type": {
            "input": "Tensor",
            "k": "int (default: 1)",
            "dims": "list or tuple (default: (0, 1))"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.gcd": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.histc": {
        "Parameter type": {
            "input": "Tensor",
            "bins": "int",
            "min": "Scalar",
            "max": "Scalar",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.meshgrid": {
        "Parameter type": {
            "tensors": "list of Tensor",
            "indexing": "str (optional)"
        },
        "Mandatory Parameters": [
            "tensors"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.lcm": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.logcumsumexp": {
        "Parameter type": {
            "input": "Tensor",
            "dim": "int",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "dim"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.ravel": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.renorm": {
        "Parameter type": {
            "input": "Tensor",
            "p": "float",
            "dim": "int",
            "maxnorm": "float",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "p",
            "dim",
            "maxnorm"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.repeat_interleave": {
        "Parameter type": {
            "input": "Tensor",
            "repeats": "Tensor or int",
            "dim": "int, optional",
            "output_size": "int, optional"
        },
        "Mandatory Parameters": [
            "input",
            "repeats"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.roll": {
        "Parameter type": {
            "input": "Tensor",
            "shifts": "int or tuple of ints",
            "dims": "int or tuple of ints (default: None)"
        },
        "Mandatory Parameters": [
            "input",
            "shifts"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.searchsorted": {
        "Parameter type": {
            "sorted_sequence": "Tensor",
            "values": "Tensor or Scalar",
            "out_int32": "bool (optional)",
            "right": "bool (optional)",
            "side": "str (optional)",
            "out": "Tensor (optional)",
            "sorter": "LongTensor (optional)"
        },
        "Mandatory Parameters": [
            "sorted_sequence",
            "values"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "right",
                "side"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.tensordot": {
        "Parameter type": {
            "a": "Tensor",
            "b": "Tensor",
            "dims": "int or Tuple[List[int], List[int]] or List[List[int]] containing two lists or Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "a",
            "b"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.trace": {
        "Parameter type": {
            "input": "Tensor (shape: (n, n))",
            "weight": "Tensor (shape: (out_channels, in_channels // groups, kW))",
            "bias": "Optional[Tensor] (shape: (out_channels))",
            "stride": "Union[int, Tuple[int]] (default: 1)",
            "padding": "Union[int, Tuple[int], str] (default: 0; options: 'valid', 'same')",
            "dilation": "Union[int, Tuple[int]] (default: 1)",
            "groups": "int (default: 1)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.tril": {
        "Parameter type": {
            "input": "Tensor",
            "diagonal": "int (optional)",
            "out": "Tensor (optional)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.tril_indices": {
        "Parameter type": {
            "row": "int",
            "col": "int",
            "offset": "int (default: 0)",
            "dtype": "torch.dtype (optional; default: torch.long)",
            "device": "torch.device (optional; default: 'cpu')",
            "layout": "torch.layout (optional; default: torch.strided)"
        },
        "Mandatory Parameters": [
            "row",
            "col"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.triu": {
        "Parameter type": {
            "input": "Tensor",
            "diagonal": "int (optional)",
            "out": "Tensor (optional)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.triu_indices": {
        "Parameter type": {
            "row": "int",
            "col": "int",
            "offset": "int (default: 0)",
            "dtype": "torch.dtype (optional; default: torch.long)",
            "device": "torch.device (optional; default: 'cpu')",
            "layout": "torch.layout (optional; default: torch.strided)"
        },
        "Mandatory Parameters": [
            "row",
            "col"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.vander": {
        "Parameter type": {
            "x": "Tensor",
            "N": "Optional[int]",
            "increasing": "Optional[bool]"
        },
        "Mandatory Parameters": [
            "x"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.view_as_real": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.view_as_complex": {
        "Parameter type": {
            "input": "Tensor"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.addbmm": {
        "Parameter type": {
            "input": "Tensor",
            "batch1": "Tensor",
            "batch2": "Tensor",
            "beta": "Number (optional)",
            "alpha": "Number (optional)",
            "out": "Tensor (optional)"
        },
        "Mandatory Parameters": [
            "input",
            "batch1",
            "batch2"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.addmm": {
        "Parameter type": {
            "input": "Tensor",
            "mat1": "Tensor",
            "mat2": "Tensor",
            "beta": "Number (optional)",
            "alpha": "Number (optional)",
            "out": "Tensor (optional)"
        },
        "Mandatory Parameters": [
            "input",
            "mat1",
            "mat2"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.addmv": {
        "Parameter type": {
            "input": "Tensor",
            "mat": "Tensor",
            "vec": "Tensor",
            "beta": "Number (optional)",
            "alpha": "Number (optional)",
            "out": "Tensor (optional)"
        },
        "Mandatory Parameters": [
            "input",
            "mat",
            "vec"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.addr": {
        "Parameter type": {
            "input": "Tensor",
            "vec1": "Tensor",
            "vec2": "Tensor",
            "beta": "Number (optional)",
            "alpha": "Number (optional)",
            "out": "Tensor (optional)"
        },
        "Mandatory Parameters": [
            "input",
            "vec1",
            "vec2"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.baddbmm": {
        "Parameter type": {
            "input": "Tensor",
            "batch1": "Tensor",
            "batch2": "Tensor",
            "beta": "Number (optional)",
            "alpha": "Number (optional)",
            "out": "Tensor (optional)"
        },
        "Mandatory Parameters": [
            "input",
            "batch1",
            "batch2"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.bmm": {
        "Parameter type": {
            "input": "Tensor",
            "mat2": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "mat2"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.chain_matmul": {
        "Parameter type": {
            "matrices": "Tensors...",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "matrices"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.cholesky": {
        "Parameter type": {
            "input": "Tensor",
            "upper": "bool",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.cholesky_inverse": {
        "Parameter type": {
            "input": "Tensor (shape: (*, n, n))",
            "upper": "bool (default: False)",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.cholesky_solve": {
        "Parameter type": {
            "input": "Tensor (shape: (*, n, k))",
            "input2": "Tensor (shape: (*, n, n))",
            "upper": "bool (default: False)",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "input2"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.dot": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.geqrf": {
        "Parameter type": {
            "input": "Tensor",
            "out": "Optional[Tuple[Tensor, Tensor]]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.ger": {
        "Parameter type": {
            "input": "Tensor",
            "vec2": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "vec2"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.outer": {
        "Parameter type": {
            "input": "Tensor",
            "vec2": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "vec2"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.inner": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.inverse": {
        "Parameter type": {
            "input": "Tensor (shape: (*, n, n))",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.det": {
        "Parameter type": {
            "A": "Tensor (shape: (*, n, n))",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "A"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.logdet": {
        "Parameter type": {
            "input": "Tensor (shape: (*, n, n))"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.slogdet": {
        "Parameter type": {
            "A": "Tensor (shape: (*, n, n))",
            "out": "Optional[tuple]"
        },
        "Mandatory Parameters": [
            "A"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.lu": {
        "Parameter type": {
            "A": "Tensor",
            "pivot": "bool (optional)",
            "get_infos": "bool (optional)",
            "out": "tuple (optional)"
        },
        "Mandatory Parameters": [
            "A"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.lu_solve": {
        "Parameter type": {
            "b": "Tensor",
            "LU_data": "Tensor",
            "LU_pivots": "IntTensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "b",
            "LU_data",
            "LU_pivots"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.lu_unpack": {
        "Parameter type": {
            "LU_data": "Tensor",
            "LU_pivots": "Tensor",
            "unpack_data": "bool (default: True)",
            "unpack_pivots": "bool (default: True)",
            "out": "tuple, optional"
        },
        "Mandatory Parameters": [
            "LU_data",
            "LU_pivots"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.matmul": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.matrix_power": {
        "Parameter type": {
            "input": "Tensor (shape: (*, m, m))",
            "n": "int",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "n"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.matrix_exp": {
        "Parameter type": {
            "input": "Tensor (shape: (*, n, n)) where * is zero or more batch dimensions"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.mm": {
        "Parameter type": {
            "input": "Tensor",
            "mat2": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "mat2"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.mv": {
        "Parameter type": {
            "input": "Tensor",
            "vec": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "vec"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.orgqr": {
        "Parameter type": {
            "A": "Tensor (shape: (*, m, n))",
            "tau": "Tensor (shape: (*, k))",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "A",
            "tau"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.ormqr": {
        "Parameter type": {
            "input": "Tensor",
            "tau": "Tensor",
            "other": "Tensor",
            "left": "bool",
            "transpose": "bool",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "tau",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.pinverse": {
        "Parameter type": {
            "A": "Tensor (shape: (*, m, n))",
            "rcond": "Optional[float or Tensor]",
            "atol": "Optional[float or Tensor]",
            "rtol": "Optional[float or Tensor]",
            "hermitian": "bool (default: False)",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "A"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "rcond",
                "rtol"
            ],
            [
                "atol",
                "rtol"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.qr": {
        "Parameter type": {
            "input": "Tensor",
            "some": "bool (optional)",
            "out": "tuple (optional)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.svd": {
        "Parameter type": {
            "input": "Tensor",
            "some": "bool (optional)",
            "compute_uv": "bool (optional)",
            "out": "tuple (optional)"
        },
        "Mandatory Parameters": [
            "input"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.svd_lowrank": {
        "Parameter type": {
            "A": "Tensor",
            "q": "int (optional)",
            "niter": "int (optional)",
            "M": "Tensor (optional)"
        },
        "Mandatory Parameters": [
            "A"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.pca_lowrank": {
        "Parameter type": {
            "A": "Tensor",
            "q": "Optional[int]",
            "center": "Optional[bool]",
            "niter": "Optional[int]"
        },
        "Mandatory Parameters": [
            "A"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.lobpcg": {
        "Parameter type": {
            "A": "Tensor",
            "B": "Optional[Tensor]",
            "X": "Optional[Tensor]",
            "iK": "Optional[Tensor]",
            "k": "Optional[int]",
            "n": "Optional[int]",
            "tol": "Optional[float]",
            "largest": "Optional[bool]",
            "method": "Optional[str]",
            "niter": "Optional[int]",
            "tracker": "Optional[callable]",
            "ortho_iparams": "Optional[dict]",
            "ortho_fparams": "Optional[dict]",
            "ortho_bparams": "Optional[dict]"
        },
        "Mandatory Parameters": [
            "A"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.trapz": {
        "Parameter type": {
            "y": "Tensor",
            "x": "Optional[Tensor]",
            "dx": "Optional[float]",
            "dim": "int"
        },
        "Mandatory Parameters": [
            "y"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "x",
                "dx"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.triangular_solve": {
        "Parameter type": {
            "b": "Tensor",
            "A": "Tensor",
            "upper": "bool (optional)",
            "transpose": "bool (optional)",
            "unitriangular": "bool (optional)",
            "out": "tuple of two tensors (optional)"
        },
        "Mandatory Parameters": [
            "b",
            "A"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.vdot": {
        "Parameter type": {
            "input": "Tensor",
            "other": "Tensor",
            "out": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "input",
            "other"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.compiled_with_cxx11_abi": {
        "Parameter type": {},
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.result_type": {
        "Parameter type": {
            "tensor1": "Tensor or Number",
            "tensor2": "Tensor or Number"
        },
        "Mandatory Parameters": [
            "tensor1",
            "tensor2"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.can_cast": {
        "Parameter type": {
            "from_": "dtype",
            "to": "dtype"
        },
        "Mandatory Parameters": [
            "from_",
            "to"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.promote_types": {
        "Parameter type": {
            "type1": "torch.dtype",
            "type2": "torch.dtype"
        },
        "Mandatory Parameters": [
            "type1",
            "type2"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.use_deterministic_algorithms": {
        "Parameter type": {
            "mode": "bool",
            "warn_only": "bool (optional)"
        },
        "Mandatory Parameters": [
            "mode"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.are_deterministic_algorithms_enabled": {
        "Parameter type": {},
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch._assert": {
        "Parameter type": {
            "condition": "bool",
            "message": "str"
        },
        "Mandatory Parameters": [
            "condition",
            "message"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Sequential": {
        "Parameter type": {
            "*args": "Variable number of modules or an OrderedDict of modules"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ModuleList": {
        "Parameter type": {
            "modules": "Optional[iterable] (default: None)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ModuleDict": {
        "Parameter type": {
            "modules": "Optional[Mapping[str, Module]] (default: None)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ParameterList": {
        "Parameter type": {
            "parameters": "iterable (optional)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ParameterDict": {
        "Parameter type": {
            "parameters": "Optional[Mapping[str, Any]]"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.modules.module.register_module_forward_pre_hook": {
        "Parameter type": {
            "hook": "Callable[[Module, Any], Optional[Any]]"
        },
        "Mandatory Parameters": [
            "hook"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.modules.module.register_module_forward_hook": {
        "Parameter type": {
            "hook": "Callable",
            "always_call": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "hook"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.modules.module.register_module_backward_hook": {
        "Parameter type": {
            "hook": "Callable"
        },
        "Mandatory Parameters": [
            "hook"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Conv1d": {
        "Parameter type": {
            "in_channels": "int",
            "out_channels": "int",
            "kernel_size": "int or tuple",
            "stride": "int or tuple (default: 1)",
            "padding": "int, tuple, or str (default: 0; options: 'valid', 'same')",
            "dilation": "int or tuple (default: 1)",
            "groups": "int (default: 1)",
            "bias": "bool (default: True)",
            "padding_mode": "str (default: 'zeros'; options: 'zeros', 'reflect', 'replicate', 'circular')"
        },
        "Mandatory Parameters": [
            "in_channels",
            "out_channels",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Conv2d": {
        "Parameter type": {
            "in_channels": "int",
            "out_channels": "int",
            "kernel_size": "Union[int, Tuple[int, int]]",
            "stride": "Union[int, Tuple[int, int]] (default: 1)",
            "padding": "Union[int, Tuple[int, int], str] (default: 0; options: 'valid', 'same')",
            "dilation": "Union[int, Tuple[int, int]] (default: 1)",
            "groups": "int (default: 1)",
            "bias": "bool (default: True)",
            "padding_mode": "str (default: 'zeros'; options: 'zeros', 'reflect', 'replicate', 'circular')"
        },
        "Mandatory Parameters": [
            "in_channels",
            "out_channels",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Conv3d": {
        "Parameter type": {
            "in_channels": "int",
            "out_channels": "int",
            "kernel_size": "Union[int, Tuple[int, int, int]]",
            "stride": "Union[int, Tuple[int, int, int]] (default: 1)",
            "padding": "Union[int, Tuple[int, int, int], str] (default: 0; options: 'valid', 'same')",
            "dilation": "Union[int, Tuple[int, int, int]] (default: 1)",
            "groups": "int (default: 1)",
            "bias": "bool (default: True)",
            "padding_mode": "str (default: 'zeros')"
        },
        "Mandatory Parameters": [
            "in_channels",
            "out_channels",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ConvTranspose1d": {
        "Parameter type": {
            "in_channels": "int",
            "out_channels": "int",
            "kernel_size": "int or tuple",
            "stride": "int or tuple (default: 1)",
            "padding": "int or tuple (default: 0)",
            "output_padding": "int or tuple (default: 0)",
            "groups": "int (default: 1)",
            "bias": "bool (default: True)",
            "dilation": "int or tuple (default: 1)",
            "padding_mode": "str (default: 'zeros')"
        },
        "Mandatory Parameters": [
            "in_channels",
            "out_channels",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ConvTranspose2d": {
        "Parameter type": {
            "in_channels": "int",
            "out_channels": "int",
            "kernel_size": "Union[int, Tuple[int, int]]",
            "stride": "Union[int, Tuple[int, int]] (default: 1)",
            "padding": "Union[int, Tuple[int, int]] (default: 0)",
            "output_padding": "Union[int, Tuple[int, int]] (default: 0)",
            "groups": "int (default: 1)",
            "bias": "bool (default: True)",
            "dilation": "Union[int, Tuple[int, int]] (default: 1)",
            "padding_mode": "str (default: 'zeros')"
        },
        "Mandatory Parameters": [
            "in_channels",
            "out_channels",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ConvTranspose3d": {
        "Parameter type": {
            "in_channels": "int",
            "out_channels": "int",
            "kernel_size": "Union[int, Tuple[int, int, int]]",
            "stride": "Union[int, Tuple[int, int, int]] (default: 1)",
            "padding": "Union[int, Tuple[int, int, int]] (default: 0)",
            "output_padding": "Union[int, Tuple[int, int, int]] (default: 0)",
            "groups": "int (default: 1)",
            "bias": "bool (default: True)",
            "dilation": "Union[int, Tuple[int, int, int]] (default: 1)",
            "padding_mode": "str (default: 'zeros')"
        },
        "Mandatory Parameters": [
            "in_channels",
            "out_channels",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.LazyConv1d": {
        "Parameter type": {
            "out_channels": "int",
            "kernel_size": "int or tuple",
            "stride": "int or tuple",
            "padding": "int or tuple",
            "dilation": "int or tuple",
            "groups": "int",
            "bias": "bool",
            "padding_mode": "str"
        },
        "Mandatory Parameters": [
            "out_channels",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.LazyConv2d": {
        "Parameter type": {
            "out_channels": "int",
            "kernel_size": "Union[int, Tuple[int]]",
            "stride": "Union[int, Tuple[int]] (default: 1)",
            "padding": "Union[int, Tuple[int]] (default: 0)",
            "dilation": "Union[int, Tuple[int]] (default: 1)",
            "groups": "int (default: 1)",
            "bias": "bool (default: True)",
            "padding_mode": "str (default: 'zeros')"
        },
        "Mandatory Parameters": [
            "out_channels",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.LazyConv3d": {
        "Parameter type": {
            "out_channels": "int",
            "kernel_size": "Union[int, Tuple[int]]",
            "stride": "Union[int, Tuple[int]] (default: 1)",
            "padding": "Union[int, Tuple[int]] (default: 0)",
            "dilation": "Union[int, Tuple[int]] (default: 1)",
            "groups": "int (default: 1)",
            "bias": "bool (default: True)",
            "padding_mode": "str (default: 'zeros')"
        },
        "Mandatory Parameters": [
            "out_channels",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.LazyConvTranspose1d": {
        "Parameter type": {
            "out_channels": "int",
            "kernel_size": "int or tuple",
            "stride": "int or tuple",
            "padding": "int or tuple",
            "output_padding": "int or tuple",
            "groups": "int",
            "bias": "bool",
            "dilation": "int or tuple",
            "padding_mode": "str"
        },
        "Mandatory Parameters": [
            "out_channels",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.LazyConvTranspose2d": {
        "Parameter type": {
            "out_channels": "int",
            "kernel_size": "Union[int, Tuple[int]]",
            "stride": "Union[int, Tuple[int]] (default: 1)",
            "padding": "Union[int, Tuple[int]] (default: 0)",
            "output_padding": "Union[int, Tuple[int]] (default: 0)",
            "groups": "int (default: 1)",
            "bias": "bool (default: True)",
            "dilation": "Union[int, Tuple[int]] (default: 1)",
            "padding_mode": "str (default: 'zeros')"
        },
        "Mandatory Parameters": [
            "out_channels",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.LazyConvTranspose3d": {
        "Parameter type": {
            "out_channels": "int",
            "kernel_size": "Union[int, Tuple[int]]",
            "stride": "Union[int, Tuple[int]] (default: 1)",
            "padding": "Union[int, Tuple[int]] (default: 0)",
            "output_padding": "Union[int, Tuple[int]] (default: 0)",
            "groups": "int (default: 1)",
            "bias": "bool (default: True)",
            "dilation": "Union[int, Tuple[int]] (default: 1)",
            "padding_mode": "str (default: 'zeros')"
        },
        "Mandatory Parameters": [
            "out_channels",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Unfold": {
        "Parameter type": {
            "kernel_size": "Union[int, Tuple[int]]",
            "dilation": "Union[int, Tuple[int]] (default: 1)",
            "padding": "Union[int, Tuple[int]] (default: 0)",
            "stride": "Union[int, Tuple[int]] (default: 1)"
        },
        "Mandatory Parameters": [
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Fold": {
        "Parameter type": {
            "output_size": "int or tuple",
            "kernel_size": "int or tuple",
            "dilation": "int or tuple (optional)",
            "padding": "int or tuple (optional)",
            "stride": "int or tuple"
        },
        "Mandatory Parameters": [
            "output_size",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.MaxPool1d": {
        "Parameter type": {
            "kernel_size": "int (must be > 0)",
            "stride": "int (default: kernel_size)",
            "padding": "int (must be >= 0 and <= kernel_size / 2)",
            "dilation": "int (must be > 0)",
            "return_indices": "bool (default: False)",
            "ceil_mode": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.MaxPool2d": {
        "Parameter type": {
            "kernel_size": "Union[int, Tuple[int, int]]",
            "stride": "Union[int, Tuple[int, int]] (default: None)",
            "padding": "Union[int, Tuple[int, int]] (default: 0)",
            "dilation": "Union[int, Tuple[int, int]] (default: 1)",
            "return_indices": "bool (default: False)",
            "ceil_mode": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.MaxPool3d": {
        "Parameter type": {
            "kernel_size": "Union[int, Tuple[int, int, int]]",
            "stride": "Union[int, Tuple[int, int, int]] (default: None)",
            "padding": "Union[int, Tuple[int, int, int]] (default: 0)",
            "dilation": "Union[int, Tuple[int, int, int]] (default: 1)",
            "return_indices": "bool (default: False)",
            "ceil_mode": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.MaxUnpool1d": {
        "Parameter type": {
            "kernel_size": "int or tuple",
            "stride": "int or tuple",
            "padding": "int or tuple"
        },
        "Mandatory Parameters": [
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.MaxUnpool2d": {
        "Parameter type": {
            "kernel_size": "int or tuple",
            "stride": "int or tuple (default: None)",
            "padding": "int or tuple (default: 0)"
        },
        "Mandatory Parameters": [
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.MaxUnpool3d": {
        "Parameter type": {
            "kernel_size": "int or tuple",
            "stride": "int or tuple",
            "padding": "int or tuple"
        },
        "Mandatory Parameters": [
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.AvgPool1d": {
        "Parameter type": {
            "kernel_size": "int or one-element tuple",
            "stride": "int or one-element tuple (default: kernel_size)",
            "padding": "int (default: 0)",
            "ceil_mode": "bool (default: False)",
            "count_include_pad": "bool (default: True)"
        },
        "Mandatory Parameters": [
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.AvgPool2d": {
        "Parameter type": {
            "kernel_size": "Union[int, Tuple[int, int]]",
            "stride": "Union[int, Tuple[int, int]] (default: None)",
            "padding": "Union[int, Tuple[int, int]] (default: 0)",
            "ceil_mode": "bool (default: False)",
            "count_include_pad": "bool (default: True)",
            "divisor_override": "Optional[int] (default: None)"
        },
        "Mandatory Parameters": [
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.AvgPool3d": {
        "Parameter type": {
            "kernel_size": "Union[int, Tuple[int, int, int]]",
            "stride": "Union[int, Tuple[int, int, int]]",
            "padding": "Union[int, Tuple[int, int, int]]",
            "ceil_mode": "bool",
            "count_include_pad": "bool",
            "divisor_override": "Optional[int]"
        },
        "Mandatory Parameters": [
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.FractionalMaxPool2d": {
        "Parameter type": {
            "kernel_size": "Union[int, Tuple[int, int]]",
            "output_size": "Optional[Union[int, Tuple[int, int]]]",
            "output_ratio": "Optional[Union[float, Tuple[float, float]]]",
            "return_indices": "bool",
            "_random_samples": "Optional[Tensor]"
        },
        "Mandatory Parameters": [
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [
            [
                "output_size",
                "output_ratio"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.LPPool1d": {
        "Parameter type": {
            "norm_type": "int",
            "kernel_size": "int",
            "stride": "Optional[int]",
            "ceil_mode": "bool"
        },
        "Mandatory Parameters": [
            "norm_type",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.LPPool2d": {
        "Parameter type": {
            "norm_type": "float",
            "kernel_size": "Union[int, Tuple[int, int]]",
            "stride": "Union[int, Tuple[int, int]]",
            "ceil_mode": "bool"
        },
        "Mandatory Parameters": [
            "norm_type",
            "kernel_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.AdaptiveMaxPool1d": {
        "Parameter type": {
            "output_size": "int",
            "return_indices": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "output_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.AdaptiveMaxPool2d": {
        "Parameter type": {
            "output_size": "Union[int, Tuple[int, int], None]",
            "return_indices": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "output_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.AdaptiveMaxPool3d": {
        "Parameter type": {
            "output_size": "Union[int, Tuple[int, int, int]]",
            "return_indices": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "output_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.AdaptiveAvgPool1d": {
        "Parameter type": {
            "output_size": "int"
        },
        "Mandatory Parameters": [
            "output_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.AdaptiveAvgPool2d": {
        "Parameter type": {
            "output_size": "Union[int, Tuple[int, int], None]"
        },
        "Mandatory Parameters": [
            "output_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.AdaptiveAvgPool3d": {
        "Parameter type": {
            "output_size": "Union[int, Tuple[int, int, int]]"
        },
        "Mandatory Parameters": [
            "output_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ReflectionPad1d": {
        "Parameter type": {
            "padding": "Union[int, Tuple[int]]"
        },
        "Mandatory Parameters": [
            "padding"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ReflectionPad2d": {
        "Parameter type": {
            "padding": "Union[int, Tuple[int]]"
        },
        "Mandatory Parameters": [
            "padding"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ReplicationPad1d": {
        "Parameter type": {
            "padding": "Union[int, Tuple[int]]"
        },
        "Mandatory Parameters": [
            "padding"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ReplicationPad2d": {
        "Parameter type": {
            "padding": "Union[int, Tuple[int]]"
        },
        "Mandatory Parameters": [
            "padding"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ReplicationPad3d": {
        "Parameter type": {
            "padding": "Union[int, Tuple[int]]"
        },
        "Mandatory Parameters": [
            "padding"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ZeroPad2d": {
        "Parameter type": {
            "padding": "Union[int, Tuple[int]]"
        },
        "Mandatory Parameters": [
            "padding"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ConstantPad1d": {
        "Parameter type": {
            "padding": "Union[int, Tuple[int]]",
            "value": "float"
        },
        "Mandatory Parameters": [
            "padding",
            "value"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ConstantPad2d": {
        "Parameter type": {
            "padding": "Union[int, Tuple[int]]",
            "value": "float"
        },
        "Mandatory Parameters": [
            "padding",
            "value"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ConstantPad3d": {
        "Parameter type": {
            "padding": "Union[int, Tuple[int]]",
            "value": "float"
        },
        "Mandatory Parameters": [
            "padding",
            "value"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ELU": {
        "Parameter type": {
            "alpha": "float (default: 1.0)",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Hardshrink": {
        "Parameter type": {
            "lambd": "float (default: 0.5)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Hardsigmoid": {
        "Parameter type": {
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Hardtanh": {
        "Parameter type": {
            "min_val": "float (default: -1.0)",
            "max_val": "float (default: 1.0)",
            "inplace": "bool (default: False)",
            "min_value": "Optional[float] (deprecated)",
            "max_value": "Optional[float] (deprecated)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "min_val",
                "min_value"
            ],
            [
                "max_val",
                "max_value"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Hardswish": {
        "Parameter type": {
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.LeakyReLU": {
        "Parameter type": {
            "negative_slope": "float (default: 0.01)",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.MultiheadAttention": {
        "Parameter type": {
            "embed_dim": "int",
            "num_heads": "int",
            "dropout": "float (default: 0.0)",
            "bias": "bool (default: True)",
            "add_bias_kv": "bool (default: False)",
            "add_zero_attn": "bool (default: False)",
            "kdim": "int (default: None)",
            "vdim": "int (default: None)",
            "batch_first": "bool (default: False)",
            "device": "Optional[Union[str, torch.device]] (default: None)",
            "dtype": "Optional[torch.dtype] (default: None)"
        },
        "Mandatory Parameters": [
            "embed_dim",
            "num_heads"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.PReLU": {
        "Parameter type": {
            "num_parameters": "int",
            "init": "float",
            "device": "Optional[Union[str, torch.device]]",
            "dtype": "Optional[torch.dtype]"
        },
        "Mandatory Parameters": [
            "num_parameters"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ReLU": {
        "Parameter type": {
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ReLU6": {
        "Parameter type": {
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.RReLU": {
        "Parameter type": {
            "lower": "float (default: 0.125)",
            "upper": "float (default: 0.3333333333333333)",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.SELU": {
        "Parameter type": {
            "inplace": "bool (optional)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.CELU": {
        "Parameter type": {
            "alpha": "float (default: 1.0)",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.SiLU": {
        "Parameter type": {
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Softplus": {
        "Parameter type": {
            "beta": "int (default: 1)",
            "threshold": "int (default: 20)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Softshrink": {
        "Parameter type": {
            "lambd": "float (default: 0.5)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Threshold": {
        "Parameter type": {
            "threshold": "float",
            "value": "float",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [
            "threshold",
            "value"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Softmin": {
        "Parameter type": {
            "dim": "int (default: None)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Softmax": {
        "Parameter type": {
            "dim": "int (default: None)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.LogSoftmax": {
        "Parameter type": {
            "dim": "int (default: None)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.AdaptiveLogSoftmaxWithLoss": {
        "Parameter type": {
            "in_features": "int",
            "n_classes": "int",
            "cutoffs": "Sequence",
            "div_value": "float (optional)",
            "head_bias": "bool (optional)",
            "device": "Optional[device]",
            "dtype": "Optional[dtype]"
        },
        "Mandatory Parameters": [
            "in_features",
            "n_classes",
            "cutoffs"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.BatchNorm1d": {
        "Parameter type": {
            "num_features": "int",
            "eps": "float (default: 1e-05)",
            "momentum": "float or None (default: 0.1)",
            "affine": "bool (default: True)",
            "track_running_stats": "bool (default: True)",
            "device": "Optional[Union[str, torch.device]] (default: None)",
            "dtype": "Optional[torch.dtype] (default: None)"
        },
        "Mandatory Parameters": [
            "num_features"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.BatchNorm2d": {
        "Parameter type": {
            "num_features": "int",
            "eps": "float (default: 1e-05)",
            "momentum": "float or None (default: 0.1)",
            "affine": "bool (default: True)",
            "track_running_stats": "bool (default: True)",
            "device": "Optional[Union[str, torch.device]] (default: None)",
            "dtype": "Optional[torch.dtype] (default: None)"
        },
        "Mandatory Parameters": [
            "num_features"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.BatchNorm3d": {
        "Parameter type": {
            "num_features": "int",
            "eps": "float (default: 1e-05)",
            "momentum": "float or None (default: 0.1)",
            "affine": "bool (default: True)",
            "track_running_stats": "bool (default: True)",
            "device": "Optional[Union[str, torch.device]] (default: None)",
            "dtype": "Optional[torch.dtype] (default: None)"
        },
        "Mandatory Parameters": [
            "num_features"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.GroupNorm": {
        "Parameter type": {
            "num_groups": "int",
            "num_channels": "int",
            "eps": "float (default: 1e-05)",
            "affine": "bool (default: True)",
            "device": "Optional[Union[torch.device, str]] (default: None)",
            "dtype": "Optional[torch.dtype] (default: None)"
        },
        "Mandatory Parameters": [
            "num_groups",
            "num_channels"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.SyncBatchNorm": {
        "Parameter type": {
            "num_features": "int",
            "eps": "float (default: 1e-05)",
            "momentum": "float or None (default: 0.1)",
            "affine": "bool (default: True)",
            "track_running_stats": "bool (default: True)",
            "process_group": "ProcessGroup or None (default: None)",
            "device": "Device or None (default: None)",
            "dtype": "Dtype or None (default: None)"
        },
        "Mandatory Parameters": [
            "num_features"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.InstanceNorm1d": {
        "Parameter type": {
            "num_features": "int",
            "eps": "float (default: 1e-05)",
            "momentum": "float (default: 0.1)",
            "affine": "bool (default: False)",
            "track_running_stats": "bool (default: False)",
            "device": "Optional[Union[str, torch.device]] (default: None)",
            "dtype": "Optional[torch.dtype] (default: None)"
        },
        "Mandatory Parameters": [
            "num_features"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.InstanceNorm2d": {
        "Parameter type": {
            "num_features": "int",
            "eps": "float (default: 1e-05)",
            "momentum": "float (default: 0.1)",
            "affine": "bool (default: False)",
            "track_running_stats": "bool (default: False)",
            "device": "Optional[Union[str, torch.device]] (default: None)",
            "dtype": "Optional[torch.dtype] (default: None)"
        },
        "Mandatory Parameters": [
            "num_features"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.InstanceNorm3d": {
        "Parameter type": {
            "num_features": "int",
            "eps": "float (default: 1e-05)",
            "momentum": "float (default: 0.1)",
            "affine": "bool (default: False)",
            "track_running_stats": "bool (default: False)",
            "device": "Optional[Union[str, torch.device]] (default: None)",
            "dtype": "Optional[torch.dtype] (default: None)"
        },
        "Mandatory Parameters": [
            "num_features"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.LayerNorm": {
        "Parameter type": {
            "normalized_shape": "int or list or torch.Size",
            "eps": "float (default: 1e-05)",
            "elementwise_affine": "bool (default: True)",
            "device": "Optional[Union[str, torch.device]]",
            "dtype": "Optional[torch.dtype]"
        },
        "Mandatory Parameters": [
            "normalized_shape"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.LocalResponseNorm": {
        "Parameter type": {
            "size": "int",
            "alpha": "float (default: 0.0001)",
            "beta": "float (default: 0.75)",
            "k": "float (default: 1.0)"
        },
        "Mandatory Parameters": [
            "size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.RNNBase": {
        "Parameter type": {
            "mode": "str",
            "input_size": "int",
            "hidden_size": "int",
            "num_layers": "int (default: 1)",
            "bias": "bool (default: True)",
            "batch_first": "bool (default: False)",
            "dropout": "float (default: 0.0)",
            "bidirectional": "bool (default: False)",
            "proj_size": "int (default: 0)",
            "device": "Optional[Union[str, torch.device]] (default: None)",
            "dtype": "Optional[torch.dtype] (default: None)"
        },
        "Mandatory Parameters": [
            "mode",
            "input_size",
            "hidden_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.RNN": {
        "Parameter type": {
            "input_size": "int",
            "hidden_size": "int",
            "num_layers": "int (default: 1)",
            "nonlinearity": "str (default: 'tanh')",
            "bias": "bool (default: True)",
            "batch_first": "bool (default: False)",
            "dropout": "float (default: 0.0)",
            "bidirectional": "bool (default: False)",
            "device": "Optional[Union[str, torch.device]] (default: None)",
            "dtype": "Optional[torch.dtype] (default: None)"
        },
        "Mandatory Parameters": [
            "input_size",
            "hidden_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.LSTM": {
        "Parameter type": {
            "input_size": "int",
            "hidden_size": "int",
            "num_layers": "int (default: 1)",
            "bias": "bool (default: True)",
            "batch_first": "bool (default: False)",
            "dropout": "float (default: 0.0)",
            "bidirectional": "bool (default: False)",
            "proj_size": "int (default: 0)",
            "device": "Optional[Union[str, torch.device]]",
            "dtype": "Optional[torch.dtype]"
        },
        "Mandatory Parameters": [
            "input_size",
            "hidden_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.GRU": {
        "Parameter type": {
            "input_size": "int",
            "hidden_size": "int",
            "num_layers": "int (default: 1)",
            "bias": "bool (default: True)",
            "batch_first": "bool (default: False)",
            "dropout": "float (default: 0.0)",
            "bidirectional": "bool (default: False)",
            "device": "Optional[Union[str, torch.device]] (default: None)",
            "dtype": "Optional[torch.dtype] (default: None)"
        },
        "Mandatory Parameters": [
            "input_size",
            "hidden_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.RNNCell": {
        "Parameter type": {
            "input_size": "int",
            "hidden_size": "int",
            "bias": "bool (default: True)",
            "nonlinearity": "str (default: 'tanh')"
        },
        "Mandatory Parameters": [
            "input_size",
            "hidden_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.LSTMCell": {
        "Parameter type": {
            "input_size": "int",
            "hidden_size": "int",
            "bias": "bool (default: True)",
            "device": "Optional[Union[str, torch.device]] (default: None)",
            "dtype": "Optional[torch.dtype] (default: None)"
        },
        "Mandatory Parameters": [
            "input_size",
            "hidden_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.GRUCell": {
        "Parameter type": {
            "input_size": "int",
            "hidden_size": "int",
            "bias": "bool (default: True)",
            "device": "Optional[Union[str, torch.device]] (default: None)",
            "dtype": "Optional[torch.dtype] (default: None)"
        },
        "Mandatory Parameters": [
            "input_size",
            "hidden_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Transformer": {
        "Parameter type": {
            "d_model": "int (default: 512)",
            "nhead": "int (default: 8)",
            "num_encoder_layers": "int (default: 6)",
            "num_decoder_layers": "int (default: 6)",
            "dim_feedforward": "int (default: 2048)",
            "dropout": "float (default: 0.1)",
            "activation": "Union[str, callable] (default: 'relu')",
            "custom_encoder": "Optional[nn.Module] (default: None)",
            "custom_decoder": "Optional[nn.Module] (default: None)",
            "layer_norm_eps": "float (default: 1e-5)",
            "batch_first": "bool (default: False)",
            "norm_first": "bool (default: False)",
            "bias": "bool (default: True)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.TransformerEncoder": {
        "Parameter type": {
            "encoder_layer": "TransformerEncoderLayer instance (required)",
            "num_layers": "int (required)",
            "norm": "Optional[LayerNorm instance]",
            "enable_nested_tensor": "bool (default: True)"
        },
        "Mandatory Parameters": [
            "encoder_layer",
            "num_layers"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.TransformerDecoder": {
        "Parameter type": {
            "decoder_layer": "TransformerDecoderLayer instance (required)",
            "num_layers": "int (required)",
            "norm": "Optional[LayerNorm instance] (optional)"
        },
        "Mandatory Parameters": [
            "decoder_layer",
            "num_layers"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.TransformerEncoderLayer": {
        "Parameter type": {
            "d_model": "int (required)",
            "nhead": "int (required)",
            "dim_feedforward": "int (default: 2048)",
            "dropout": "float (default: 0.1)",
            "activation": "Union[str, callable] (default: 'relu')",
            "layer_norm_eps": "float (default: 1e-5)",
            "batch_first": "bool (default: False)",
            "norm_first": "bool (default: False)",
            "bias": "bool (default: True)"
        },
        "Mandatory Parameters": [
            "d_model",
            "nhead"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.TransformerDecoderLayer": {
        "Parameter type": {
            "d_model": "int (required)",
            "nhead": "int (required)",
            "dim_feedforward": "int (default=2048)",
            "dropout": "float (default=0.1)",
            "activation": "Union[str, callable] (default='relu')",
            "layer_norm_eps": "float (default=1e-5)",
            "batch_first": "bool (default=False)",
            "norm_first": "bool (default=False)",
            "bias": "bool (default=True)"
        },
        "Mandatory Parameters": [
            "d_model",
            "nhead"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Identity": {
        "Parameter type": {
            "args": "any argument (unused)",
            "kwargs": "any keyword argument (unused)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Linear": {
        "Parameter type": {
            "in_features": "int",
            "out_features": "int",
            "bias": "bool (default: True)",
            "device": "Optional[Union[str, torch.device]] (default: None)",
            "dtype": "Optional[torch.dtype] (default: None)"
        },
        "Mandatory Parameters": [
            "in_features",
            "out_features"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Bilinear": {
        "Parameter type": {
            "in1_features": "int",
            "in2_features": "int",
            "out_features": "int",
            "bias": "bool (default: True)",
            "device": "Optional[Union[str, torch.device]] (default: None)",
            "dtype": "Optional[torch.dtype] (default: None)"
        },
        "Mandatory Parameters": [
            "in1_features",
            "in2_features",
            "out_features"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.LazyLinear": {
        "Parameter type": {
            "out_features": "int",
            "bias": "bool",
            "device": "Optional[Union[str, torch.device]]",
            "dtype": "Optional[torch.dtype]"
        },
        "Mandatory Parameters": [
            "out_features"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Dropout": {
        "Parameter type": {
            "p": "float (default: 0.5)",
            "inplace": "bool (default: False)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Dropout2d": {
        "Parameter type": {
            "p": "float (optional; default: 0.5)",
            "inplace": "bool (optional; default: False)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Dropout3d": {
        "Parameter type": {
            "p": "float (optional; default: 0.5)",
            "inplace": "bool (optional; default: False)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.AlphaDropout": {
        "Parameter type": {
            "p": "float (default: 0.5)",
            "inplace": "bool (optional, default: False)"
        },
        "Mandatory Parameters": [
            "p"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Embedding": {
        "Parameter type": {
            "num_embeddings": "int",
            "embedding_dim": "int",
            "padding_idx": "Optional[int]",
            "max_norm": "Optional[float]",
            "norm_type": "float",
            "scale_grad_by_freq": "bool",
            "sparse": "bool",
            "_weight": "Optional[Tensor]",
            "device": "Optional[Union[str, torch.device]]",
            "dtype": "Optional[torch.dtype]"
        },
        "Mandatory Parameters": [
            "num_embeddings",
            "embedding_dim"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.EmbeddingBag": {
        "Parameter type": {
            "num_embeddings": "int",
            "embedding_dim": "int",
            "max_norm": "Optional[float]",
            "norm_type": "Optional[float]",
            "scale_grad_by_freq": "bool",
            "mode": "str",
            "sparse": "bool",
            "include_last_offset": "bool",
            "padding_idx": "Optional[int]",
            "device": "Optional[Union[str, torch.device]]",
            "dtype": "Optional[torch.dtype]"
        },
        "Mandatory Parameters": [
            "num_embeddings",
            "embedding_dim"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.CosineSimilarity": {
        "Parameter type": {
            "dim": "int (optional, default: 1)",
            "eps": "float (optional, default: 1e-08)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.PairwiseDistance": {
        "Parameter type": {
            "p": "float (optional, default: 2.0)",
            "eps": "float (optional, default: 1e-06)",
            "keepdim": "bool (optional, default: False)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.L1Loss": {
        "Parameter type": {
            "size_average": "Optional[bool]",
            "reduce": "Optional[bool]",
            "reduction": "Optional[str]"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.MSELoss": {
        "Parameter type": {
            "size_average": "Optional[bool]",
            "reduce": "Optional[bool]",
            "reduction": "Optional[str]"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.CrossEntropyLoss": {
        "Parameter type": {
            "weight": "Optional[Tensor] (shape: (C))",
            "size_average": "Optional[bool]",
            "ignore_index": "int (default: -100)",
            "reduce": "Optional[bool]",
            "reduction": "str (default: 'mean')",
            "label_smoothing": "float (default: 0.0)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "reduce",
                "reduction"
            ],
            [
                "size_average",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.NLLLoss": {
        "Parameter type": {
            "weight": "Optional[Tensor]",
            "size_average": "Optional[bool]",
            "ignore_index": "int",
            "reduce": "Optional[bool]",
            "reduction": "str"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.CTCLoss": {
        "Parameter type": {
            "blank": "int (optional, default: 0)",
            "reduction": "str (optional, default: 'mean')",
            "zero_infinity": "bool (optional, default: False)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.PoissonNLLLoss": {
        "Parameter type": {
            "log_input": "bool (optional)",
            "full": "bool (optional)",
            "size_average": "bool (optional)",
            "eps": "float (optional)",
            "reduce": "bool (optional)",
            "reduction": "str (optional)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "reduce",
                "reduction"
            ],
            [
                "size_average",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.GaussianNLLLoss": {
        "Parameter type": {
            "full": "bool (optional)",
            "eps": "float (optional)",
            "reduction": "str (optional)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.KLDivLoss": {
        "Parameter type": {
            "size_average": "Optional[bool]",
            "reduce": "Optional[bool]",
            "reduction": "Optional[str]",
            "log_target": "Optional[bool]"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.BCELoss": {
        "Parameter type": {
            "weight": "Optional[Tensor]",
            "size_average": "Optional[bool]",
            "reduce": "Optional[bool]",
            "reduction": "Optional[str]"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.BCEWithLogitsLoss": {
        "Parameter type": {
            "weight": "Optional[Tensor]",
            "size_average": "Optional[bool]",
            "reduce": "Optional[bool]",
            "reduction": "str",
            "pos_weight": "Optional[Tensor]"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.MarginRankingLoss": {
        "Parameter type": {
            "margin": "float (default: 0.0)",
            "size_average": "Optional[bool] (default: None)",
            "reduce": "Optional[bool] (default: None)",
            "reduction": "Optional[str] (default: 'mean')"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.HingeEmbeddingLoss": {
        "Parameter type": {
            "margin": "float (default: 1.0)",
            "size_average": "Optional[bool] (default: None)",
            "reduce": "Optional[bool] (default: None)",
            "reduction": "Optional[str] (default: 'mean')"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.MultiLabelMarginLoss": {
        "Parameter type": {
            "size_average": "Optional[bool]",
            "reduce": "Optional[bool]",
            "reduction": "Optional[str]"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.SmoothL1Loss": {
        "Parameter type": {
            "size_average": "bool (optional)",
            "reduce": "bool (optional)",
            "reduction": "str (optional)",
            "beta": "float (optional)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.SoftMarginLoss": {
        "Parameter type": {
            "size_average": "Optional[bool]",
            "reduce": "Optional[bool]",
            "reduction": "Optional[str]"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.MultiLabelSoftMarginLoss": {
        "Parameter type": {
            "weight": "Optional[Tensor]",
            "size_average": "Optional[bool]",
            "reduce": "Optional[bool]",
            "reduction": "Optional[str]"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.CosineEmbeddingLoss": {
        "Parameter type": {
            "margin": "float (optional)",
            "size_average": "bool (optional)",
            "reduce": "bool (optional)",
            "reduction": "str (optional)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.MultiMarginLoss": {
        "Parameter type": {
            "p": "int (optional, default: 1)",
            "margin": "float (optional, default: 1.0)",
            "weight": "Optional[Tensor] (optional)",
            "size_average": "Optional[bool] (optional, deprecated)",
            "reduce": "Optional[bool] (optional, deprecated)",
            "reduction": "str (optional, default: 'mean')"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "size_average",
                "reduction"
            ],
            [
                "reduce",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.TripletMarginLoss": {
        "Parameter type": {
            "margin": "float (default: 1.0)",
            "p": "int (default: 2.0)",
            "eps": "float (default: 1e-06)",
            "swap": "bool (default: False)",
            "size_average": "Optional[bool] (default: None)",
            "reduce": "Optional[bool] (default: None)",
            "reduction": "str (default: 'mean')"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size_average",
                "reduce"
            ],
            [
                "reduce",
                "reduction"
            ],
            [
                "size_average",
                "reduction"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.TripletMarginWithDistanceLoss": {
        "Parameter type": {
            "distance_function": "Optional[Callable]",
            "margin": "float (default: 1.0)",
            "swap": "bool (default: False)",
            "reduction": "str (default: 'mean')"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.PixelShuffle": {
        "Parameter type": {
            "upscale_factor": "int"
        },
        "Mandatory Parameters": [
            "upscale_factor"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.PixelUnshuffle": {
        "Parameter type": {
            "downscale_factor": "int"
        },
        "Mandatory Parameters": [
            "downscale_factor"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Upsample": {
        "Parameter type": {
            "size": "Optional[Union[int, Tuple[int], Tuple[int, int], Tuple[int, int, int]]]",
            "scale_factor": "Optional[Union[float, Tuple[float], Tuple[float, float], Tuple[float, float, float]]]",
            "mode": "str (default: 'nearest')",
            "align_corners": "Optional[bool]",
            "recompute_scale_factor": "Optional[bool]"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size",
                "scale_factor"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.UpsamplingNearest2d": {
        "Parameter type": {
            "size": "Optional[Union[int, Tuple[int, int]]]",
            "scale_factor": "Optional[Union[float, Tuple[float, float]]]"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size",
                "scale_factor"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.UpsamplingBilinear2d": {
        "Parameter type": {
            "size": "Optional[Union[int, Tuple[int, int]]]",
            "scale_factor": "Optional[Union[float, Tuple[float, float]]]"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [
            [
                "size",
                "scale_factor"
            ]
        ],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.ChannelShuffle": {
        "Parameter type": {
            "groups": "int"
        },
        "Mandatory Parameters": [
            "groups"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.DataParallel": {
        "Parameter type": {
            "module": "Module",
            "device_ids": "Optional[List[Union[int, torch.device]]]",
            "output_device": "Optional[Union[int, torch.device]]",
            "dim": "int (default: 0)"
        },
        "Mandatory Parameters": [
            "module"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.parallel.DistributedDataParallel": {
        "Parameter type": {
            "module": "Module",
            "device_ids": "list of int or torch.device or None",
            "output_device": "int or torch.device or None",
            "dim": "int",
            "broadcast_buffers": "bool",
            "process_group": "process group or None",
            "bucket_cap_mb": "int or None",
            "find_unused_parameters": "bool",
            "check_reduction": "bool",
            "gradient_as_bucket_view": "bool",
            "static_graph": "bool",
            "delay_all_reduce_named_params": "list of tuple of str and torch.nn.Parameter or None",
            "param_to_hook_all_reduce": "torch.nn.Parameter or None"
        },
        "Mandatory Parameters": [
            "module"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.utils.clip_grad_norm_": {
        "Parameter type": {
            "parameters": "Iterable[Tensor] or Tensor",
            "max_norm": "float",
            "norm_type": "float",
            "error_if_nonfinite": "bool",
            "foreach": "bool"
        },
        "Mandatory Parameters": [
            "parameters",
            "max_norm"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.utils.parameters_to_vector": {
        "Parameter type": {
            "parameters": "Iterable[Tensor]"
        },
        "Mandatory Parameters": [
            "parameters"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.utils.vector_to_parameters": {
        "Parameter type": {
            "vec": "Tensor",
            "parameters": "Iterable[Tensor]"
        },
        "Mandatory Parameters": [
            "vec",
            "parameters"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.utils.weight_norm": {
        "Parameter type": {
            "module": "Module",
            "name": "str (optional)",
            "dim": "int (optional)"
        },
        "Mandatory Parameters": [
            "module"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.utils.remove_weight_norm": {
        "Parameter type": {
            "module": "Module",
            "name": "str (optional)"
        },
        "Mandatory Parameters": [
            "module"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.utils.spectral_norm": {
        "Parameter type": {
            "module": "nn.Module",
            "name": "str (default: 'weight')",
            "n_power_iterations": "int (default: 1)",
            "eps": "float (default: 1e-12)",
            "dim": "Optional[int] (default: None)"
        },
        "Mandatory Parameters": [
            "module"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.utils.remove_spectral_norm": {
        "Parameter type": {
            "module": "Module",
            "name": "str (optional)"
        },
        "Mandatory Parameters": [
            "module"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.utils.rnn.pack_padded_sequence": {
        "Parameter type": {
            "input": "Tensor",
            "lengths": "Tensor or list(int)",
            "batch_first": "bool (optional)",
            "enforce_sorted": "bool (optional)"
        },
        "Mandatory Parameters": [
            "input",
            "lengths"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.utils.rnn.pad_packed_sequence": {
        "Parameter type": {
            "sequence": "PackedSequence",
            "batch_first": "bool (optional, default: False)",
            "padding_value": "float (optional, default: 0.0)",
            "total_length": "int (optional, default: None)"
        },
        "Mandatory Parameters": [
            "sequence"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.utils.rnn.pad_sequence": {
        "Parameter type": {
            "sequences": "list[Tensor]",
            "batch_first": "bool (optional)",
            "padding_value": "float (optional)",
            "padding_side": "str (optional)"
        },
        "Mandatory Parameters": [
            "sequences"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.utils.rnn.pack_sequence": {
        "Parameter type": {
            "sequences": "list[Tensor]",
            "enforce_sorted": "bool (optional, default: True)"
        },
        "Mandatory Parameters": [
            "sequences"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Flatten": {
        "Parameter type": {
            "start_dim": "int (default: 1)",
            "end_dim": "int (default: -1)"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.Unflatten": {
        "Parameter type": {
            "dim": "Union[int, str]",
            "unflattened_size": "Union[torch.Size, Tuple, List, NamedShape]"
        },
        "Mandatory Parameters": [
            "dim",
            "unflattened_size"
        ],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    },
    "torch.nn.modules.lazy.LazyModuleMixin": {
        "Parameter type": {
            "*args": "Variable length argument list",
            "**kwargs": "Arbitrary keyword arguments"
        },
        "Mandatory Parameters": [],
        "Mutually Exclusive Parameter Pairs": [],
        "Mandatory Coexistence Parameters": [],
        "Conditional Mutual Exclusion Parameters": []
    }
}